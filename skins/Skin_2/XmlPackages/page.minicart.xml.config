<?xml version="1.0" standalone="yes"?>
<package version="2.1" displayname="MiniCart" includeentityhelper="true" debug="false">

  <!-- ###################################################################################################### -->
  <!-- Licensed by Interprise Solutions.					                          -->
  <!-- http://www.InterpriseSolutions.com														                                          -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                    -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!-- ###################################################################################################### -->

  <query name="Minicart" rowElementName="MinicartRow">
    <sql>
      <![CDATA[
                exec GetEcommerceShoppingCart @CartType, @CustomerID, @WebSiteCode, @WarehouseCode, @LanguageCode, @ContactCode, @UserCode
            ]]>
    </sql>
    <queryparam paramname="@CartType" paramtype="runtime" requestparamname="CartType" sqlDataType="int" defvalue="" validationpattern="" />
    <queryparam paramname="@CustomerID" paramtype="runtime" requestparamname="CustomerID" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@WebSiteCode" paramtype="runtime" requestparamname="WebSiteCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@WarehouseCode" paramtype="runtime" requestparamname="WarehouseCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@LanguageCode" paramtype="runtime" requestparamname="LanguageCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@ContactCode" paramtype="runtime" requestparamname="ContactCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
    <queryparam paramname="@UserCode" paramtype="runtime" requestparamname="UserCode" sqlDataType="nvarchar" defvalue="" validationpattern="" />
  </query>

  <PackageTransform>

    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                    xmlns:ise="urn:ise" exclude-result-prefixes="ise"
                    xmlns:exsl="http://exslt.org/common"
                    extension-element-prefixes="exsl">
      <xsl:output method="html" omit-xml-declaration="yes"/>

      <xsl:param name="ShowStockHints">
        <xsl:value-of select="ise:AppConfig('ShowStockHints')" />
      </xsl:param>

      <xsl:param name="ShowActualInventory">
        <xsl:value-of select="ise:AppConfig('ShowActualInventory')" />
      </xsl:param>

      <xsl:param name="VAT.Enabled">
        <xsl:value-of select="ise:AppConfig('VAT.Enabled')" />
      </xsl:param>

      <xsl:param name="pAypalCheckoutOnMinicart">
        <xsl:value-of select="ise:AppConfig('PayPalCheckout.ShowOnCartPage')" />
      </xsl:param>

      <xsl:param name="gOogleCheckoutOnMinicart">
        <xsl:value-of select="ise:AppConfig('GoogleCheckout.ShowOnCartPage')" />
      </xsl:param>

      <xsl:param name="redirectToOnePage">
        <xsl:value-of select="ise:AppConfig('Checkout.UseOnePageCheckout')" />
      </xsl:param>
        
        <xsl:param name="IsNotRegisteredCustomer">
            <xsl:choose>
                <xsl:when test="ise:ToLower(/root/Runtime/CustomerIsRegistered) = 'false'">true</xsl:when>
                <xsl:otherwise>false</xsl:otherwise>
            </xsl:choose>
        </xsl:param>

      <xsl:param name="stringActualInventory" select="ise:StringResource('showproduct.aspx.47')" />
      <xsl:param name="stringExVAT" select="ise:StringResource('showproduct.aspx.37')" />
      <xsl:param name="stringIncVAT" select="ise:StringResource('showproduct.aspx.38')" />
      <xsl:param name="stringVAT" select="ise:StringResource('showproduct.aspx.41')" />

      <xsl:template match="/">
        
          <!--hold the value of minicart.showitemcount config-->
          <input type="hidden" id="NumMiniCartItems" value="{ise:AppConfig('MiniCart.ShowItemCount')}" style="visibility: hidden;"/>
          <input type="hidden" id="vatEnabled" value="{$VAT.Enabled}" style="visibility: hidden;"/>
          <input type="hidden" id="vatSetting" value="{ise:VATSettingForCustomer()}" style="visibility: hidden;"/>

        <div class="miniCartClose">
          <span>
            <xsl:value-of select="ise:StringResource('shoppingcart.cs.46')" disable-output-escaping="yes" />
          </span>
          <div class="closeMCart">
            <div>
              <a href="#" onclick="$('#mini-cart').slideUp('fast'); deleteCookie('cartisopen');">
                <xsl:value-of select="ise:StringResource('shoppingcart.cs.48')" disable-output-escaping="yes" />
              </a>
            </div>
          </div>
        </div>
        <div style="clear:both"></div>
        <xsl:choose>
          <xsl:when test="count(/root/Minicart/MinicartRow) &gt; 0">
            <!--miniCart Line Items-->
            <div style="position: relative; height: 20px; border-bottom: 1px solid #CCC">
              <div id="mbTop">
                
              </div> 
            </div>
            <div style="clear:both"></div>
           
              <div id="miniCartLineItem">
                <ul id="minicartItems">
                  <xsl:for-each select="root/Minicart/MinicartRow">
                    <li id="li-minicartItems">
                      <div class="minicart-row">
                        <div id="{ItemCounter}" class="minicartImage">
                          <xsl:value-of select="ise:DisplayImage('product', ItemCounter, 'minicart', 'center')" disable-output-escaping="yes" />
                        </div>
                        <div class="minicartItemDetails">
                          <ul>
                            <li>
                              <xsl:variable name="pDisplayName">
                                <xsl:choose>
                                  <xsl:when test="string-length(ItemDescription)>0">
                                    <xsl:value-of select="ItemDescription" />
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:value-of select="ItemName" />
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:variable>

                              <xsl:choose>

                                <xsl:when test="ItemType = 'Matrix Item'">
                                  <a href="{ise:GetLinkForMatrix(ItemCode)}" title="{$pDisplayName}">
                                    <xsl:value-of select="ise:Encode(ise:Ellipses($pDisplayName, 15, 'false'))" disable-output-escaping="yes" />
                                  </a>
                                </xsl:when>

                                <xsl:otherwise>
                                  <a href="{ise:ProductLink(ItemCounter, ise:FormatStringForLink(ise:Ellipses($pDisplayName, 9, 'false')), 0)}" title="{$pDisplayName}">
                                    <xsl:value-of select="ise:Encode(ise:Ellipses($pDisplayName, 15, 'false'))" disable-output-escaping="yes" />
                                  </a>
                                </xsl:otherwise>

                              </xsl:choose>
                            </li>
                            <li>
                              <xsl:choose>

                                <xsl:when test="$VAT.Enabled = 'true'">
                                  <xsl:variable name="VatSetting" select="ise:VATSettingForCustomer()"/>
                                  <xsl:variable name="Price" select="ise:GetPriceForMinicartItem(ItemCode, ItemType, ShoppingCartRecGUID)"></xsl:variable>
                                  <xsl:variable name="ItemPrice" select="$Price * Quantity"/>

                                  <xsl:choose>

                                    <xsl:when test="$VatSetting = 2">
                                      <xsl:variable name="TotalPrice">
                                        <xsl:variable name="SubPrice">
                                          <xsl:choose>
                                            <xsl:when test="ItemType = 'Kit'">
                                              <xsl:value-of select="ise:GetKitPricePackage(ItemCode, 0)"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                              <xsl:value-of select="ise:GetProductPrice(ItemCode, 0)"/>
                                            </xsl:otherwise>
                                          </xsl:choose>
                                        </xsl:variable>
                                        <xsl:variable name="Quantity" select="Quantity"></xsl:variable>
                                        <number>
                                          <xsl:value-of select="$SubPrice * $Quantity"/>
                                        </number>
                                      </xsl:variable>
                                      <xsl:value-of select="concat(ise:FormatCurrency(sum(exsl:node-set($TotalPrice)/number), ''), ' ', $stringExVAT)" disable-output-escaping="yes" />
                                      <br/>
                                      <xsl:value-of select="concat($stringVAT, ise:FormatCurrency($ItemPrice), '')"/>
                                    </xsl:when>

                                    <xsl:otherwise>
                                      <xsl:value-of select="concat(ise:FormatCurrency($ItemPrice, ''), ' ' , $stringIncVAT)"/>
                                    </xsl:otherwise>

                                  </xsl:choose>

                                </xsl:when>

                                <xsl:otherwise>
                                  <xsl:variable name="TotalPrice">
                                    <xsl:variable name="SubPrice">
                                      <xsl:choose>
                                        <xsl:when test="ItemType = 'Kit'">
                                          <xsl:value-of select="ise:GetKitPricePackage(ItemCode, 0)"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                          <xsl:value-of select="ise:GetProductPrice(ItemCode, 0)"/>
                                        </xsl:otherwise>
                                      </xsl:choose>
                                    </xsl:variable>
                                    <xsl:variable name="Quantity" select="Quantity"></xsl:variable>
                                    <number>
                                      <xsl:value-of select="$SubPrice * $Quantity"/>
                                    </number>
                                  </xsl:variable>
                                  <xsl:value-of select="ise:FormatCurrency(sum(exsl:node-set($TotalPrice)/number), '')" disable-output-escaping="yes" />
                                </xsl:otherwise>

                              </xsl:choose>
                            </li>
                            <li>
                              <xsl:if test="ItemType != 'Non-Stock' and ItemType != 'Service' and ItemType != 'Electronic Download'">
                                <xsl:choose>
                                  <xsl:when test="FreeStock &gt; 0">
                                    <xsl:choose>
                                      <xsl:when test="$ShowStockHints = 'true'">
                                        <xsl:choose>
                                          <xsl:when test="$ShowActualInventory = 'true'">
                                            <xsl:value-of select="concat(ise:GetFreeStock(ItemCode), ' ', $stringActualInventory)" disable-output-escaping="yes" />
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <img src="images/instock.png"/>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:when >
                                      <xsl:otherwise>
                                      </xsl:otherwise>
                                    </xsl:choose >
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <img src="images/outofstock.png"/>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:if>
                            </li>
                          </ul>
                        </div>
                        <div>
                          <div id="{ShoppingCartRecID}" class="qtyLineItem">
                            <input type="text" name="Quantity_{ShoppingCartRecID}" id="Quantity_{ShoppingCartRecID}" value="{ise:FormatDecimal(Quantity, 0)}" size="3" maxlength="14"/>
                          </div>
                          <div class="deleteLineItem">
                            <div>
                              <a id="btnDelete_{ShoppingCartRecID}" href="#" onclick="removeItem({ShoppingCartRecID})">
                                <xsl:value-of select="ise:StrToUpper(ise:StringResource('shoppingcart.cs.31'))" disable-output-escaping="yes" />
                              </a>
                            </div>
                          </div>
                          <div style="clear:both"></div>
                        </div>
                      </div>
                    </li>
                  </xsl:for-each>
                </ul>
              </div>
            <div style="clear:both"></div>
            
            <div style="position: relative; height: 10px; border-top: 1px solid #CCC">
              <div id="mbTm"></div>
            </div>
            <div style="clear:both"></div>

            <!--2nd row - SubTotal, Update Cart button-->
            <div id="SubTotal" style="text-align: center; padding: 15px; height: 25px;">
              <div style="clear:both"></div>
              <div class="totalprice">
                <b>
                  <xsl:value-of select="ise:StringResource('shoppingcart.cs.27')" disable-output-escaping="yes" />
                </b>
                <xsl:choose>
                  <xsl:when test="$VAT.Enabled = 'true'">
                    <xsl:variable name="VatSetting" select="ise:VATSettingForCustomer()"/>
                    <xsl:choose>
                      <xsl:when test="$VatSetting = 2">
                        <xsl:variable name="subTotals">
                          <xsl:for-each select="root/Minicart/MinicartRow">

                            <xsl:variable name="SubPrice">
                              <xsl:choose>
                                <xsl:when test="ItemType = 'Kit'">
                                  <xsl:value-of select="ise:GetKitPricePackage(ItemCode, 0)"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="ise:GetProductPrice(ItemCode, 0)"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:variable name="Quantity" select="Quantity"></xsl:variable>
                            <number>
                              <xsl:value-of select="$SubPrice * $Quantity"/>
                            </number>

                          </xsl:for-each>

                        </xsl:variable>
                        
                        <span>
                          <xsl:value-of select="ise:FormatCurrency(sum(exsl:node-set($subTotals)/number), '')" disable-output-escaping="yes" />
                        </span>
                        <xsl:value-of select="concat(' ', $stringExVAT)" disable-output-escaping="yes" />
                        
                        <xsl:variable name="ExVatPrice" >
                          <xsl:for-each select="root/Minicart/MinicartRow">
                            <xsl:variable name="ItemPrice" select="ise:GetPriceForMinicartItem(ItemCode, ItemType, ShoppingCartRecGUID)"></xsl:variable>
                            <xsl:variable name="Quantity" select="Quantity"></xsl:variable>
                            <number>
                              <xsl:value-of select="$ItemPrice * $Quantity"/>
                            </number>
                          </xsl:for-each>
                        </xsl:variable>
                        <br/>
                        <xsl:value-of select="concat($stringVAT, ise:FormatCurrency(sum(exsl:node-set($ExVatPrice)/number), ''))" disable-output-escaping="yes" />

                      </xsl:when>

                      <xsl:otherwise>
                        <xsl:variable name="IncVatPrice" >
                          <xsl:for-each select="root/Minicart/MinicartRow">
                            <xsl:variable name="ItemPrice" select="ise:GetPriceForMinicartItem(ItemCode, ItemType, ShoppingCartRecGUID)"></xsl:variable>
                            <xsl:variable name="Quantity" select="Quantity"></xsl:variable>
                            <number>
                              <xsl:value-of select="$ItemPrice * $Quantity"/>
                            </number>
                          </xsl:for-each>
                        </xsl:variable>
                        <span>
                          <xsl:value-of select="ise:FormatCurrency(sum(exsl:node-set($IncVatPrice)/number), '')" disable-output-escaping="yes" />
                        </span>
                        <xsl:value-of select="concat(' ', $stringIncVAT)" disable-output-escaping="yes" />
                      </xsl:otherwise>

                    </xsl:choose>

                  </xsl:when>

                  <xsl:otherwise>
                    <xsl:variable name="subTotals">
                      <xsl:for-each select="root/Minicart/MinicartRow">
                        <xsl:variable name="SubPrice">
                          <xsl:choose>
                            <xsl:when test="ItemType = 'Kit'">
                              <xsl:value-of select="ise:GetKitPricePackage(ItemCode, 0)"/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="ise:GetProductPrice(ItemCode, 0)"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:variable name="Quantity" select="Quantity"></xsl:variable>
                        <number>
                          <xsl:value-of select="$SubPrice * $Quantity"/>
                        </number>
                      </xsl:for-each>
                    </xsl:variable>
                    <span>
                      <xsl:value-of select="ise:FormatCurrency(sum(exsl:node-set($subTotals)/number), '')" disable-output-escaping="yes" />
                    </span>
                  </xsl:otherwise>

                </xsl:choose>
              </div>
            </div>

            <!--3rd row - View Cart, Update Cart and Continue Checkout button-->
            <div style="text-align: center; padding: 0 15px 12px 15px; border-top: 1px solid #CCCCCC; height: 35px;">
              <div class="minicartlinks">
                <a href="shoppingcart.aspx">
                  <xsl:value-of select="ise:StringResource('shoppingcart.cs.45')" disable-output-escaping="yes" />
                </a>
              </div>
              <div class="minicartlinks">
                <a href="#" class="btn_greenForMiniCart" onclick="updateCart()">
                  <xsl:value-of select="ise:StrToUpper(ise:StringResource('shoppingcart.cs.33'))" disable-output-escaping="yes" />
                </a>
              </div>
              <div class="minicartlinks minicheckout">
                <xsl:choose>
                  <xsl:when test="$redirectToOnePage = 'true' and $IsNotRegisteredCustomer = 'false'">
                    <a href="checkout1.aspx" >
                      <xsl:value-of select="ise:StringResource('shoppingcart.cs.21')" disable-output-escaping="yes" />
                    </a>
                  </xsl:when>
                    <xsl:when test="$IsNotRegisteredCustomer = 'true'">
                        <a href="checkoutanon.aspx?checkout=true" >
                            <xsl:value-of select="ise:StringResource('shoppingcart.cs.21')" disable-output-escaping="yes" />
                        </a>
                    </xsl:when>
                    <xsl:otherwise>
                    <a href="checkoutshipping.aspx" >
                      <xsl:value-of select="ise:StringResource('shoppingcart.cs.21')" disable-output-escaping="yes" />
                    </a>
                  </xsl:otherwise>
                </xsl:choose>
              </div>
            </div>
            <div style="clear:both"></div>

            <!--4th row - Other Checkout Methods-->
            <div style="padding: 10px 15px; border-top: 1px solid #CCCCCC; height: 70px;">
              <div style="float: left; width: 350px;">
                <b>
                  <xsl:value-of select="ise:StringResource('shoppingcart.aspx.14')" disable-output-escaping="yes" />
                </b>
              </div>
              <div style="float: left; width: 350px;">
                <xsl:if test="$pAypalCheckoutOnMinicart = 'true'">
                  <a href="#" onclick="goToPayPalCheckout()">
                    <img id="btnPayPalExpressCheckoutMiniCart" src="http://www.paypal.com/en_US/i/btn/btn_xpressCheckout.gif"></img>
                  </a>
                </xsl:if>
                <xsl:if test="$gOogleCheckoutOnMinicart = 'true'">
                  <a href="#" onclick="goToGoogleCheckout()">
                    <img id="btnGoogleCheckoutMiniCart" src="http://checkout.google.com/buttons/checkout.gif?merchant_id&#61;&amp;w&#61;180&amp;h&#61;46&amp;style&#61;trans&amp;variant&#61;text"></img>
                  </a>
                </xsl:if>
              </div>
            </div>
            <div style="clear:both"></div>
            
            <!--5th row - Accessory Products-->
            <div style="width: 360px; padding: 15px 5px 0 15px; border-top: 1px solid #CCCCCC;">
              <div id="minicart-accessory-panel">
              </div>
            </div>

          </xsl:when>
          <xsl:otherwise>
            <div>
              <xsl:value-of select="ise:Topic('EMPTYCARTTEXT')" disable-output-escaping="yes" />
            </div>
          </xsl:otherwise>
        </xsl:choose>
        
      </xsl:template>
    </xsl:stylesheet>
  </PackageTransform>
</package>


