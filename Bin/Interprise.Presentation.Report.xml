<?xml version="1.0"?>
<doc>
<assembly>
<name>
Interprise.Presentation.Report
</name>
</assembly>
<members>
<member name="P:Interprise.Presentation.Report.Documents.SubReportBase.MenuGroupCode">
	<summary>
 Get/Sets the module name where the report belongs
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Documents.SubReportBase.ReportName">
	<summary>
 Get/Sets the report name of the object
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Documents.SubReportBase.SubReportCode">
	<summary>
 Get/Sets the report code of the subreport control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Documents.SubReportBase.Datasource">
	<summary>
 Get/Sets the datasource of the 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.SubReportBase.#ctor">
	<summary>
 Construct new object
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.SubReportBase.PutStateToBrick(DevExpress.XtraPrinting.VisualBrick,DevExpress.XtraPrinting.PrintingSystemBase)">
	<summary>
 To display the selected report source in the sub report control
 </summary>
	<param name="brick"></param>
	<param name="ps"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.SubReportBase.SubReportBase_BeforePrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
	<summary>
 Load the subreport's data
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Sharedcontrol.BasePrinterSettingControl.LoadPrinters">
	<summary>
 Shows the Print Dialog
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Sharedcontrol.BaseCriteriaBuilderForm.CriteriaDataByte">
	<summary>
 The values that holds the dataset.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Sharedcontrol.BaseCriteriaBuilderForm.CriteriaSchemaByte">
	<summary>
 The value that holds the data of the dataset.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Sharedcontrol.BaseCriteriaBuilderForm.StringCriteriaString">
	<summary>
 The criteria seen in the print dialog.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Sharedcontrol.BaseCriteriaBuilderForm.ActiveTable">
	<summary>
 The current table of the report
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Sharedcontrol.BaseCriteriaBuilderForm.ReportDetail">
	<summary>
 Returns the currently selected report
 </summary>
</member><member name="M:Interprise.Presentation.Report.Sharedcontrol.BaseCriteriaBuilderForm.GetTableName(System.String[],System.Byte[],System.Byte[],System.String)">
	<summary>
 Gets the tablename of the report
 </summary>
	<param name="TableNameString">The tablename/s of the report</param>
	<param name="CriteriaData">The values that holds the dataset.</param>
	<param name="CriteriaSchema">The value that holds the data of the dataset.</param>
	<param name="StringCriteria">The criteria seen in the print dialog.</param>
	<example>
		<code lang="VB" title="SetFilter">
  Dim m_baseCriteriaBuilderForm As New Sharedcontrol.BaseCriteriaBuilderForm
  m_baseCriteriaBuilderForm.GetTableName(New String() {"CustomerSalesOrder"}, _
  New Byte() {"0x3C43726974657269614461746173657420786D6C6E733D22687474703A2F2F74656D707572692E6F72672F4372697465726961446174617365742E787364223E0D0A20203C43726974657269613E0D0A202020203C5461626C654E616D653E437573746F6D657253616C65734F72646572466F726D5265706F727456696577"}, _
  New Byte() {"0x3C3F786D6C2076657273696F6E3D22312E30223F3E0D0A3C78733A736368656D612069643D2243726974657269614461746173657422207461726765744E616D6573706163653D22687474703A2F2F74656D707572692E6F72672F4372697465726961446174617365742E7873642220786D6C6E733A6D73746E733D226874"}, _
  "WHERE [CustomerSalesOrderFormReportView].[SalesOrderCode] IN ('')")
    </code>
		<code lang="CS" title="SetFilter">
 Sharedcontrol.BaseCriteriaBuilderForm m_baseCriteriaBuilderForm = new Sharedcontrol.BaseCriteriaBuilderForm();
 m_baseCriteriaBuilderForm.GetTableName(new string[] {"CustomerSalesOrder"}, 
 new byte[]  {"0x3C43726974657269614461746173657420786D6C6E733D22687474703A2F2F74656D707572692E6F72672F4372697465726961446174617365742E787364223E0D0A20203C43726974657269613E0D0A202020203C5461626C654E616D653E437573746F6D657253616C65734F72646572466F726D5265706F727456696577"},
 new byte[]  {"0x3C3F786D6C2076657273696F6E3D22312E30223F3E0D0A3C78733A736368656D612069643D2243726974657269614461746173657422207461726765744E616D6573706163653D22687474703A2F2F74656D707572692E6F72672F4372697465726961446174617365742E7873642220786D6C6E733A6D73746E733D226874"},
 "WHERE [CustomerSalesOrderFormReportView].[SalesOrderCode] IN ('')");
    </code>
	</example>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Sharedcontrol.BaseCriteriaBuilderForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Report.PrinterOptionControl.LoadPrinters">
	<summary>
 Shows the Print Dialog
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.ReportListControl.InitializeReportList(System.String,System.String[],System.Guid)">
	<summary>
 Gets the listing of the reports
 </summary>
	<param name="formClassType">Represents where the report should be printed</param>
	<param name="reportTypeCodes">Represents the reportaction</param>
	<param name="reportCode">Represents the guid of the report</param>
	<example>
		<code lang="CS" inline="False">
		</code>
		<code lang="VB" title="InitializeReportList" description="Gets listing of reports">
 Dim m_printFacade As New Interprise.Facade.Report.PrintDialogFacade(New Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway)
 Dim m_reportListControl As New PrintDialog.ReportListControl(New Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway, m_printFacade)
  m_reportListControl.InitializeReportList("Interprise.Presentation.Customer.SalesOrder.SalesOrderForm", New String() {"1179"}, CObj("EB837A5C-420D-4B9F-9B4C-B5360FAB57B7"))
    </code>
		<code lang="CS" title="InitializeReportList" description="Gets listing of reports">
 Interprise.Facade.Report.PrintDialogFacade m_printFacade = new Interprise.Facade.Report.PrintDialogFacade(new Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway());
 PrintDialog.ReportListControl m_reportListControl = new PrintDialog.ReportListControl(new Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway(), m_printFacade);
 m_reportListControl.InitializeReportList("Interprise.Presentation.Customer.SalesOrder.SalesOrderForm", new string[] {"1179"}, (object)"EB837A5C-420D-4B9F-9B4C-B5360FAB57B7");
    </code>
	</example>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.ReportListControl.InitializeControls(System.Boolean)">
	<summary>
	</summary>
	<param name="isBeginInit"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrinterControl.PrintSettings">
	<summary>
 Shows the Print Dialog
 </summary>
	<value>PrintSettings</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrinterControl.PageSetUpSettings">
	<summary>
 Shows the Print Dialog
 </summary>
	<value>PrintSettings</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrinterControl.ReportPrinterSettings">
	<summary>
	</summary>
	<value>ReportPrinterSettings</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.AttachedImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.EnableDisableEditors">
	<summary>
 Enables the editors according to the Printing Options selected
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.InitializeControls(System.Boolean)">
	<summary>
	</summary>
	<param name="isBeginInit"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.LoadPrinters">
	<summary>
 Shows the installed printers
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.SetFilter(System.Guid)">
	<summary>
	</summary>
	<param name="reportCode"></param>
	<example>
		<code lang="VB" title="SetFilter">
 Dim m_reportFacade As New Interprise.Facade.Report.PrintDialogFacade(New Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway)
 Dim m_printerControl As New PrintDialog.PrinterControl(New Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway, m_reportFacade)
 m_printerControl.SetFilter(CObj("EB837A5C-420D-4B9F-9B4C-B5360FAB57B7"))
    </code>
		<code lang="CS" title="SetFilter">
 Interprise.Facade.Report.PrintDialogFacade m_reportFacade = new Interprise.Facade.Report.PrintDialogFacade(new Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway());
 PrintDialog.PrinterControl m_printerControl = new PrintDialog.PrinterControl(new Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway(), m_reportFacade);
 m_printerControl.SetFilter((object)"EB837A5C-420D-4B9F-9B4C-B5360FAB57B7");
    </code>
	</example>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Report.PrintDialog.PrinterControl.StorePrinterSettingsDelegate">
	<summary>
 Stores the value for Print Dialog
 </summary>
	<param name="reportListDataSourceRowIndex"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.RefreshUI">
	<summary>
 Refreshes the value of the combobox
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.CommitChanges">
	<summary>
 Saves the current changes in Printer's Preference
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.CallPageSetUp">
	<summary>
 Shows the Page Set Up Dialog
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.CallPrintDialog">
	<summary>
 Shoes the Print Dialog
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.ButtonFindPrinter_Click(System.Object,System.EventArgs)">
	<summary>
 Loads the existing printer
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.ButtonProperties_Click(System.Object,System.EventArgs)">
	<summary>
 Calls the Page Set Up and Print Dialog
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.RadioRange_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Occurs when changing the index of the selected value in the combo box editor. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.ComboFormat_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Occurs when changing the index of the selected value in the combo box editor. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrinterControl.ComboName_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Occurs when changing the index of the selected value in the combo box editor. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogForm.ReportDetail">
	<summary>
 Returns the currently selected report
 </summary>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogForm.IsInitializeData">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogForm.EmailStructure">
	<summary>
 Gets the content of the editor
 </summary>
	<value>EmailStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogForm.EmailSubject">
	<summary>
 Gets the subject of the email
 </summary>
	<value>EmailSubject</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogForm.EmailStructureName">
	<summary>
 Gets the name of the email
 </summary>
	<value>EmailStructureName</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogForm.EmailTemplateSource">
	<summary>
 Gets the source of the email
 </summary>
	<value>EmailTemplateSource</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogForm.GetreportStructure">
	<summary>
	</summary>
	<value>GetreportStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.DefaultCriteriaValue">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.EmailStructure">
	<summary>
 Gets the content of the editor
 </summary>
	<value>EmailStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.EmailStructureName">
	<summary>
 Gets the name of the email
 </summary>
	<value>EmailStructureName</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.EmailSubject">
	<summary>
 Gets the subject of the email
 </summary>
	<value>EmailSubject</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.EmailTemplateSource">
	<summary>
 Gets the source of the email
 </summary>
	<value>EmailTemplateSource</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.GetreportStructure">
	<summary>
	</summary>
	<value>GetreportStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.IgnoreFilter">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.MainCriteria">
	<summary>
	</summary>
	<value></value>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.CheckReportSelected">
	<summary>
 Validates if the user selected a report
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.EndInitializeControls">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.Focus">
	<summary>
	</summary>
	<returns>Focus</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.InitializeReportList(System.String,System.String[],System.Guid)">
	<summary>
 Gets the listing of the reports
 </summary>
	<param name="formClassType">Represents where the report should be printed</param>
	<param name="reportTypeCodes">Represents the reportaction</param>
	<param name="reportCode">Represents the guid of the report</param>
	<example>
		<code lang="CS" inline="False">
		</code>
		<code lang="VB" title="InitializeReportList" description="Gets listing of reports">
 Dim m_PrintDialogControlOrig As New PrintDialog.PrintDialogControlOrig
 m_PrintDialogControlOrig.InitializeReportList("Interprise.Presentation.Customer.SalesOrder.SalesOrderForm", New String() {"1179"}, CObj("EB837A5C-420D-4B9F-9B4C-B5360FAB57B7"))
    </code>
		<code lang="CS" title="InitializeReportList" description="Gets listing of reports">
 PrintDialog.PrintDialogControlOrig m_PrintDialogControlOrig = new PrintDialog.PrintDialogControlOrig();
 m_PrintDialogControlOrig.InitializeReportList("Interprise.Presentation.Customer.SalesOrder.SalesOrderForm", new string[] {"1179"}, (object)"EB837A5C-420D-4B9F-9B4C-B5360FAB57B7");
    </code>
	</example>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.Print">
	<summary>
 Prints the currently selected item/transaction.
 </summary>
	<remarks></remarks>
 Modify by: pete.a 08/11/2009 - Change the GetField to GetCacheField

</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.SelectAll">
	<summary>
 Checks all the reports in the Report List
 </summary>
	<example>
		<code lang="CS" inline="False">
		</code>
		<code lang="VB" title="SelectAll" description="Gets listing of reports">
 Dim m_printFacade As New Interprise.Facade.Report.PrintDialogFacade(New Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway)
 Dim m_reportListControl As New PrintDialog.ReportListControl(New Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway, m_printFacade)
  m_reportListControl.SelectAll(True)
    </code>
		<code lang="CS" title="SelectAll" description="Gets listing of reports">
 Interprise.Facade.Report.PrintDialogFacade m_printFacade = new Interprise.Facade.Report.PrintDialogFacade(new Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway());
 PrintDialog.ReportListControl m_reportListControl = new PrintDialog.ReportListControl(new Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway(), m_printFacade);
 m_reportListControl.SelectAll(true);
    </code>
	</example>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.SelectNone">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.StoreSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.PluginContainerPrinterSettingsPluginInstance_EmailCheckChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.PluginContainerPrinterSettingsPluginInstance_FaxCheckChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.PluginContainerPrinterSettingsPluginInstance_LowestCostCheckChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.PluginContainerReportListPluginInstance_BeforeSelectedReportChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.PluginContainerReportListPluginInstance_SelectedReportChanged(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.ReportCommand_OnPrintCompleted(System.Object,System.EventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.TabGroupSetup_SelectedPageChanged(System.Object,DevExpress.XtraLayout.LayoutTabPageChangedEventArgs)">
	<summary>
	</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.PluginContainerReportList_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.PluginContainerPrinterSettings_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.PluginContainerEmail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.PluginContainerFax_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.PrintDialogControl.PluginContainerFilterCriteria_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.FSSearchControl.ProvideStandardWhereClause">
	<summary>
 Sets the starting date  and ending date so i can access it and display it on the title of the report
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.FSSearchControl.GetStartingDate">
	<summary>
 Gets and format date
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.EmailTemplateControl.MHT">
	<summary>
 This string created during the creation of an email
 </summary>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.EmailTemplateControl.PrintDialogDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.EmailTemplateControl.ReportBase">
	<summary>
 The current report document/file in the designer
 </summary>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.EmailTemplateControl.EmailStructure">
	<summary>
 Gets the content of the editor
 </summary>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.EmailTemplateControl.EmailStructureName">
	<summary>
 Gets the structure name of the email
 </summary>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.EmailTemplateControl.EmailSubject">
	<summary>
 Gets the subject of the email
 </summary>
</member><member name="P:Interprise.Presentation.Report.PrintDialog.EmailTemplateControl.EmailTemplateSource">
	<summary>
 Gets the source of the email
 </summary>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.EmailTemplateControl.CommitChanges">
	<summary>
 Updates any changes in the report
 </summary>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.EmailTemplateControl.ShowTemplateContent">
	<summary>
 Gets the value for the the selected template
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.EmailTemplateControl.SetFilter(System.Guid)">
	<summary>
 Gets the current reportCode of the report
 </summary>
	<example>
		<code lang="VB" title="SetFilter">
 Dim m_reportFacade As New Interprise.Facade.Report.PrintDialogFacade(New Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway)
 Dim m_ReportEmailControl As New PrintDialog.EmailTemplateControl(New Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway, m_reportFacade)
 m_ReportEmailControl.SetFilter(CObj("EB837A5C-420D-4B9F-9B4C-B5360FAB57B7"))
    </code>
		<code lang="CS" title="SetFilter">
 Interprise.Facade.Report.PrintDialogFacade m_reportFacade = new Interprise.Facade.Report.PrintDialogFacade(new Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway());
 PrintDialog.EmailTemplateControl m_ReportEmailControl = new PrintDialog.EmailTemplateControl(new Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway(), m_reportFacade);
 m_ReportEmailControl.SetFilter((object)"EB837A5C-420D-4B9F-9B4C-B5360FAB57B7");
    </code>
	</example>
	<param name="reportCode">Represents a paricular report</param>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.EmailTemplateControl.GetTextEditorControl">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.EmailTemplateControl.InitializeControl">
	<summary>
 Calls the method to create the control
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.PrintDialog.FaxTemplateControl.SetFilter(System.Guid)">
	<summary>
 Gets the current report
 </summary>
	<example>
		<code lang="VB" title="SetFilter">
 Dim m_reportFacade As New Interprise.Facade.Report.PrintDialogFacade(New Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway)
 Dim m_ReportFaxControl As New PrintDialog.FaxTemplateControl(New Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway, m_reportFacade)
 m_ReportFaxControl.SetFilter(CObj("EB837A5C-420D-4B9F-9B4C-B5360FAB57B7"))
    </code>
		<code lang="CS" title="SetFilter">
 Interprise.Facade.Report.PrintDialogFacade m_reportFacade = new Interprise.Facade.Report.PrintDialogFacade(new Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway());
 PrintDialog.FaxTemplateControl m_ReportFaxControl = new PrintDialog.FaxTemplateControl(new Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway(), m_reportFacade);
 m_ReportFaxControl.SetFilter((object)"EB837A5C-420D-4B9F-9B4C-B5360FAB57B7");
    </code>
	</example>
	<param name="reportCode">Represents the guid of the report</param>
</member><member name="M:Interprise.Presentation.Report.Preview.PrintPreviewForm.OnPrint">
	<summary>
 Prints the report without calling the prind dialog
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Preview.PrintPreviewForm.SetReportMargin">
	<summary>
 Sets the default margin
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Preview.PrintPreviewForm.ViewReport(DevExpress.XtraReports.UI.XtraReport,Interprise.Framework.Base.Shared.Enum.PrintDirection)">
	<summary>
 Default Constructor. Displays the report in the print preview panel.
 </summary>
	<param name="reportDocument">The report to be printed.</param>
	<param name="direction">direction of printing.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Preview.PrintPreviewForm.ViewReport(DevExpress.XtraReports.UI.XtraReport)">
	<summary>
 Use this overload ViewReport method when displaying report that does not require
 to read the details from the SystemUserRoleMenuReport table.
 This method expect that the report is ready for printing  (ie Datasource is in placed)
 </summary>
	<param name="reportDocument">Report to be displayed.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Preview.PrintPreviewForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="P:Interprise.Presentation.Report.Preview.PrintPreviewForm.PanelBodyPluginInstance">
	<summary>
 Returns the instance of plugin assigned to the plugin container.
 </summary>
	<value>The instance of plugin assigned to the plugin container</value>
	<returns>Interprise.Extendable.Report.Presentation.Preview.IBasePrintPreviewControlInterface</returns>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors. You may also lost your changes when the codes are regenerated.</remarks>
</member><member name="M:Interprise.Presentation.Report.Preview.PrintPreviewControl.AttachedImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Interprise.Presentation.Report.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Interprise.Presentation.Report.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="P:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportMainControl.LanguageCode">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportMainControl.MenuGroupCode">
	<summary>
 Gets/Sets the menu group code
 </summary>
</member><member name="P:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportMainControl.ReportCode">
	<summary>
 Gets/Sets the report code of the object
 </summary>
</member><member name="M:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportMainControl.PluginContainerForeignKeyMain_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportForm.ForeignDataBye">
	<summary>
 The values that holds the dataset.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportForm.ForeignSchemaByte">
	<summary>
 The value that holds the data of the dataset.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportForm.ReportCode">
	<summary>
 Gets/Sets the report code of the object
 </summary>
</member><member name="P:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportForm.LanguageCode">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportForm.MenuGroupCode">
	<summary>
 Gets/Sets the menu group code
 </summary>
</member><member name="M:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportControl.ReportCode">
	<summary>
 Gets/Sets the report code of the object
 </summary>
</member><member name="P:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportControl.ChildReportCode">
	<summary>
 Gets/Sets the report code of the object
 </summary>
</member><member name="P:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportControl.LanguageCode">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.ForeignKey.ForeignKeySubReportControl.MenuGroupCode">
	<summary>
 Gets/Sets the menu group code
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_CompanyInformation">
	<summary>
 The company information for the report
 </summary>
 Fields

</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_DataSet">
	<summary>
 The default datasource of the report
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_DataTables">
	<summary>
 A collection of TableStruct
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_Fields">
	<summary>
 A collection of FieldStruct
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_FilterList">
	<summary>
 A collection FilterStruct
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_Groups">
	<summary>
 A collection of GroupStuct
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_JoinBuilder">
	<summary>
 The JOIN clause of the report
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_PrePrinted">
	<summary>
 Tells if the report is preprinted or not
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_PrinterInfo">
	<summary>
 The printing information of the report
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_Relationships">
	<summary>
 A collection of RelationshipStruct
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_ReportDescription">
	<summary>
 The description of the report
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_ReportFacade">
	<summary>
 The report facade
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_ReportName">
	<summary>
 The name/title of the report
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_SelBuilder">
	<summary>
 The SELECT clause of the query
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_Sorts">
	<summary>
 A collection of SortStruct
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_Summaries">
	<summary>
 A collection of SummaryStruct
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_WhereBuilder">
	<summary>
 The WHERE clause of the query
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_SortBuilder">
	<summary>
 The ORDER clause of the query
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_ReportCode">
	<summary>
 The report code of the report object
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_DataBindings">
	<summary>
 Collection of default databindings in the report
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_Data">
	<summary>
 The datasource of the report using the single query approach
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_UseSingleQuery">
	<summary>
 Tells if the report will use a single query (much faster) or not
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_MenuGroupCode">
	<summary>
 The menu group code of the report
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_FormClassType">
	<summary>
 The form class type of the report
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_ReportTypeCode">
	<summary>
 The report type code
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_GroupCategory">
	<summary>
 The category group of the report
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_SortOrder">
	<summary>
 The sort order of the report
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_TopicCode">
	<summary>
 The topic code of the report
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_ReportCategory">
	<summary>
 The category of the report
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_ShowOnWeb">
	<summary>
 Tells if the report can be shown on the web or not
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_ChildReportCode">
	<summary>
 The Child Report code
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_UserRole">
	<summary>
 The current user role
 </summary>
</member><member name="F:Interprise.Presentation.Report.Documents.ReportBase.m_ReportDetail">
	<summary>
 The current report detail row
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.CompanyInformation">
	<summary>
 Gets/Sets the company information of the report
 </summary>
	<value>CompanyInfoStruct</value>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.DataTableRelations">
	<summary>
 Gets/Sets the relationship infomration of the datatables
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.DataTables">
	<summary>
 Gets/Sets related table for the report
 </summary>
	<value>A collection of TableStruct</value>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.Fields">
	<summary>
 Gets the current selected field in the report
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ReportFields">
	<summary>
 Gets the current selected field in the report
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ReportDescription">
	<summary>
 Gets/Sets the report description
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ReportFilters">
	<summary>
 Gets/Sets the report filters
 </summary>
	<remarks>The report filters is being used to generate the WHERE clause of the query</remarks>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ReportGroups">
	<summary>
 Gets/Sets report groupings
 </summary>
	<remarks>Groupings create report group band details in the report</remarks>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ReportName">
	<summary>
 Gets/Sets the report name/title
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ReportSorts">
	<summary>
 Gets/Sets the sort order of the report
 </summary>
	<remarks>The report sorts is being used to generate the ORDER clause of the query</remarks>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ReportSummaries">
	<summary>
 Gets/Sets the summary of the report
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ReportCode">
	<summary>
 Gets/Sets the report code of the object
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.UseSingleQuery">
	<summary>
 Gets/Sets if the report will use a single query or not
 </summary>
	<remarks>Using a single query is much faster than querying all the data in the datatables. The drawback is that you can't create a multiple detail bands in the report since single query will only return a single datatable</remarks>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.MenuGroupCode">
	<summary>
 Gets/Sets the menu group code
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ReportTypeCode">
	<summary>
 Gets/Sets the report type code
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.FormClassType">
	<summary>
 Gets/Sets the report form class type
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.GroupCategory">
	<summary>
 Gets/Sets the category group of the report
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.SortOrder">
	<summary>
 Gets/Sets the sort order of the report
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.TopicCode">
	<summary>
 Gets/Sets the topic code of the report
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ReportCategory">
	<summary>
 Gets/Sets the report category
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ShowOnWeb">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.EmailCopyFromName">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.EmailExistingTemplateName">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.EmailNewTemplateName">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.EmailStructure">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.EmailStructureName">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.EmailSubject">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.EmailTemplateSource">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.EmailStructurePlainText">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.FaxCopyFromName">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.FaxExistingTemplateName">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.FaxNewTemplateName">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.FaxStructure">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.FaxStructureName">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.FaxSubject">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.FaxTemplateSource">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.FaxStructurePlainText">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.QueryString">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.StringCriteria">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.CriteriaData">
	<summary>
 Get/Sets the criteria data
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.IsAsOf">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.IsDefault">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.IsDefaultFolder">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.IsMonthEndReport">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.IsRanged">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.IsSort">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.IsUseFaxHeader">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ReportDataSource">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.ReportStructure">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.Type">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.RoleCode">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.LanguageCode">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.IsEnabled">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.IsVisible">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.PrinterInformation">
	<summary>
 Gets/Sets the printing information of the report
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.PrintDirection">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.DefaultPrintLocation">
	<summary>
 Gets/Sets if the report will be shown on the web
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.IsDesignMode">
	<summary>
 Property to get/set whether the report is opened on a designer or not
 </summary>
</member><member name="P:Interprise.Presentation.Report.Documents.ReportBase.IsPaperKindChanged">
	<summary>
 Property to get whether the report paper kind has changed or not
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.#ctor">
	<summary>
 Construct a new report object
 </summary>
 Methods

</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.#ctor(System.Guid)">
	<summary>
 Construct a new report object
 </summary>
	<param name="ReportCode">The report code to load</param>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.ApplyCompanyInfo(System.String,System.Object)">
	<summary>
 Displays the company information on a control
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.ApplyCompanyInfoWeb(System.String,System.Object,System.String)">
	<summary>
 Displays the company information on a control
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.ApplyCompanyInformation">
	<summary>
 Displays the company information
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.BuildDataSet">
	<summary>
 Builds the dataset to be the default data source of the report
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.BuildJoinClauseString">
	<summary>
 Builds the JOIN clause string of the report query
 </summary>
	<remarks>Called by BuildQueryString</remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.BuildQueryString">
	<summary>
 Builds the query string that the report will use
 </summary>
	<remarks>Calls the BuildSelectClauseString, BuildJoinClauseString, BuildWhereClauseString, BuildOrderClassString</remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.BuildRelationships(System.String,System.String)">
	<summary>
 Builds the relationship of the datatables in the dataset
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.BuildSelectClauseString">
	<summary>
 Builds the SELECT clause string of the report query
 </summary>
	<remarks>Called by BuildQueryString</remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.BuildWhereClauseString">
	<summary>
 Builds the WHERE clause string of the report query
 </summary>
	<remarks>Called by BuildQueryString</remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.SerializeProperties(DevExpress.XtraReports.Serialization.XRSerializer)">
	<summary>
 Save vital information in the report object itself
 </summary>
	<remarks>Saves infomation about the tables used, the relationships, filters, sorts, groups, printing information etc</remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.DeserializeProperties(DevExpress.XtraReports.Serialization.XRSerializer)">
	<summary>
 Get all save information in the report
 </summary>
	<remarks>Retrieves infomation about the tables used, the relationships, filters, sorts, groups, printing information etc</remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.GetAllBindedControls(DevExpress.XtraReports.UI.XRControl)">
	<summary>
 Get all controls that has binding
 </summary>
	<remarks>This will get all the fields neccessary for the SELECT clause of the query</remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.GetCompanyInformation">
	<summary> Gets the company information from the database where this report will be executed
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.GetData">
	<summary>
 Get the data based on the query
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.GetDefaultBindings">
	<summary>
 Gets the current binding collection on the report
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.ResetBindings">
	<summary>
 Resets the binding collection to the default binding collection
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.RefreshBindings">
	<summary>
 Refreshes the binding collection based on the current data source
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.LoadReport">
	<summary>
 Loads the report layout based on the current report code
 </summary>
	<remarks>This will load the report layout from the database</remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.LoadReport(System.Guid)">
	<summary>
 Loads the report layout using the report code and sets the current report code
 </summary>
	<param name="ReportCode">The report code to load</param>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.LoadReport(System.Object,System.Object,System.Object)">
	<summary>
 Loads the report layout using the report objects1 and objecst2
 </summary>
	<remarks>if object1 is nothing the load object2</remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.LoadReport(System.Object,System.Object)">
	<summary>
 Loads the report layout using the report object
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.SaveReportChanges(System.Byte[])">
	<summary>
	</summary>
	<param name="byteReport"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.SaveReport">
	<summary>
 Save the report to the database
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.UpdateReport(System.Byte[],System.Boolean)">
	<summary>
 Save a newly created report
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.BuildOrderClauseString">
	<summary>
 Builds the ORDER clause string of the report query
 </summary>
	<remarks>Called by BuildQueryString</remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.CallInsert(System.String)">
	<summary>
 Creates an INSERT, SELECT script to insert the lacking rolecode of a certain report.
 This will only be called when the rolecode of the report is not the same with the SystemUserRoleMenuGroup.
 </summary>
	<param name="p_RoleCode"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.ReportBase_BeforePrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
	<summary>
 Before the print was invoked
 </summary>
</member><member name="M:Interprise.Presentation.Report.Documents.ReportBase.ReportBase_AfterPrint(System.Object,System.EventArgs)">
	<summary>
 After the print was invoked
 </summary>
</member><member name="M:Interprise.Presentation.Report.BaseReportForm.PageHeader_BeforePrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
	<summary>
 Occurs before an XRControl object creates its image in a report being previewed/printed/exported. Calls the ModifyReportLayout method.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.BaseReport.IsAlternateRow">
	<summary>
 Return or sets the value of IsAlternateRow.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.BaseReport.ModifyReportLayout">
	<summary>
 Modifies the Print Orientation, Paper Kind, and PageSettings.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.BaseReport.BaseReport_BeforePrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
	<summary>
 Occurs before an XRControl object creates its image in a report being previewed/printed/exported. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.BaseReport.BaseReportHeader_BeforePrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
	<summary>
 Occurs before an XRControl object creates its image in a report being previewed/printed/exported. Calls the ModifyReportLayout method.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.BaseReport.BaseDetail_BeforePrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
	<summary>
 Occurs before an XRControl object creates its image in a report being previewed/printed/exported. Calls the ModifyReportLayout method.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.BaseReport.BasePageFooter_BeforePrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
	<summary>
 Occurs before an XRControl object creates its image in a report being previewed/printed/exported. Calls the ModifyReportLayout method.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.SaveFileDialogForm.ReportDocument">
	<summary>
 The current report document/file in the designer
 </summary>
	<value>ReportDocument</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.SaveFileDialogForm.ReportDetail">
	<summary>
 Returns the currently selected Report.
 </summary>
	<value>ReportDetail</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.SaveFileDialogForm.AttachedImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.SaveFileDialogForm.SaveFileDialogForm_Load(System.Object,System.EventArgs)">
	<summary>
 Occurs when the server control is loaded into the Page control. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.SaveFileDialogDetailControl.ReportSourceDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportSourceDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportSourceDataset" description="Gets the dataset of the current report">
 Dim m_reportDataDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset
 Public Overrides ReadOnly Property ReportSourceDataset() As Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportSourceDataset" description="Gets the dataset of the current report">
 Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset ReportSourceDataset 
 {
 get { return m_reportDataDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.SaveFileDialogDetailControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportDetailControl.</summary>
	<value>CurrentFacade</value>
	<example>
		<code lang="VB" title="CurrrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.SaveFileDialogDetailControl.ReportDetail">
	<summary>
 Returns the currently selected Report.
 </summary>
	<value>ReportDetail</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.SaveFileDialogDetailControl.ReportDocument">
	<summary>
   The current report document/file in the designer
 </summary>
	<value>ReportDocument</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.SaveFileDialogDetailControl.AttachedImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.SaveFileDialogDetailControl.AttachObjects">
	<summary>
 Lets you attach documents or files
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.SaveFileDialogControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return GatewayReportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 public override Framework.Report.DatasetComponent.Common.ReportSourceDataset CurrentDataset 
 {
 get { return GatewayReportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.SaveFileDialogControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportDetailControl.</summary>
	<value>CurrentFacade</value>
	<example>
		<code lang="VB" title="CurrrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.SaveFileDialogControl.isSaved">
	<summary>
 Return or sets the value of isSaved
 </summary>
	<value>isSaved</value>
	<returns>True or False</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.SaveFileDialogControl.ReportDetail">
	<summary>
 Returns the currently selected Report.
 </summary>
	<value>ReportDetail</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.SaveFileDialogControl.ReportDocument">
	<summary>
   The current report document/file in the designer
 </summary>
	<value>ReportDocument</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.SaveFileDialogControl.ReadData">
	<summary>
 Reads the data from database before saving
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.SaveFileDialogControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Saves the changes made on CurrentDataset. All changes will be reflected on the
 database.
 </summary>
	<returns>DialogResult</returns>
	<param name="confirm">
 Displays a confirmation dialog box before saving if TRUE. Otherwise, it will
 autmatically save the changes on the dataset without displaying the confirmation 
 dialog
 box.
 </param>
	<param name="clear">
 Clears or Removes all existing rows in the specified table after successfully
 saving the changes on the CurrentDataset.
 </param>
</member><member name="M:Interprise.Presentation.Report.Designer.SaveFileDialogControl.PluginContainerSaveFileDialog_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportWizardControl.</summary>
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.ReportDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportDataset" description="Gets the dataset of the current report">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property ReportDataset() As Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_currentDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset ReportDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.LayoutName">
	<summary>
 Returns the LayoutName
 </summary>
	<value>LayoutName</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.SelectedDashboardReport">
	<summary>
 Returns the currently selected rows in the Dashboard
 </summary>
	<value>SelectedDashboardReport</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.ReportDetail">
	<summary>
 Returns the currently selected Report.
 </summary>
	<value>ReportDetail</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.IsDashboardNewReport">
	<summary>
 Defines if the report is newly added on the report dashboard control
 </summary>
	<value>IsDashboardNewReport</value>
	<returns>True or False</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.NewRoleCode">
	<summary>
 Gets the current role code of the system
 </summary>
	<value>NewRoleCode</value>
	<returns></returns>
	<example>
		<code lang="CS" inline="False">
		</code>
		<code lang="VB" title="NewRoleCode" description="Returns the current role code of the system">
 Dim m_reportWizardControl as New Designer.ReportWizard
 m_reportWizardControl.NewRoleCode = "Admin"
    </code>
		<code lang="CS" title="NewRoleCode" description="Returns the current role code of the system">
 Designer.ReportWizard m_reportWizardControl = new Designer.ReportWizard();
 m_reportWizardControl.NewRoleCode = "Admin";
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.UserMenuGroupCode">
	<summary>
 Gets the current menu group or module of the report
 </summary>
	<value>MenuGroupCode</value>
	<returns>"Customer"</returns>
	<example>
		<code lang="CS" inline="False">
		</code>
		<code lang="VB" title="MenuGroupCode" description="Returns the currentlanguage the system">
 Dim m_reportWizardControl as New Designer.ReportWizard
 m_reportWizardControl.MenuGroupCode = "Customer"
    </code>
		<code lang="CS" title="MenuGroupCode" description="Returns the current language of the system">
 Designer.ReportWizard m_reportWizardControl = new Designer.ReportWizard();
 m_reportWizardControl.MenuGroupCode = "Customer";
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.UserLanguageCode">
	<summary>
 Gets the current language of the system
 </summary>
	<value>LanguageCode</value>
	<returns>"English - United States"</returns>
	<example>
		<code lang="CS" inline="False">
		</code>
		<code lang="VB" title="LanguageCode" description="Returns the currentlanguage the system">
 Dim m_reportWizardControl as New Designer.ReportWizard
 m_reportWizardControl.LanguageCode = "English - United States"
    </code>
		<code lang="CS" title="LanguageCode" description="Returns the current language of the system">
 Designer.ReportWizard m_reportWizardControl = new Designer.ReportWizard();
 m_reportWizardControl.LanguageCode = "English - United States";
    </code>
	</example>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.OnNew">
	<summary>
 Calls the Report Wizard 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.CreateReportDesignerWizardControl">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.SetFilters">
	<summary>
 This is required to get the role code, language, and module of the newly created report.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.NotifyOnSaving(Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.OnSaving)">
	<summary>
 Invoke delegate if saving is successful, this notifies the dashboard that the designer is making changes on the database, 
 invokes the dashboard to fetch a fresh data from the datasource.
 </summary>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.Show(DevExpress.XtraReports.UI.XtraReport)">
	<summary>
 Shows the report using the DevExpress.XtraReports.UI.XtraReport
 </summary>
	<param name="reportDocument"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.Show(System.IO.MemoryStream)">
	<summary>
 Shows the report using the MemoryStream
 </summary>
	<param name="reportStream"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.m_report_OnSaved">
	<summary>
 Invoke delegate if saving is successful, this notifies the dashboard that the designer is making changes on the database, 
 invokes the dashboard to fetch a fresh data from the datasource.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardForm.ReportWizardProperties">
	<summary>
 obsolete
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportWizardControl.</summary>
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.ReportDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportDataset" description="Gets the dataset of the current report">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property ReportDataset() As Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_currentDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset ReportDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.ReportFacade">
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="ReportFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property ReportFacade() As Facade.Report.ReportFacade
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Facade.Report.ReportFacade ReportFacade 
 {
 get { return m_reportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.CurrentReportCommand">
	<summary>
 Returns CurrentReportCommand
 </summary>
	<value>CurrentReportCommand</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.ReportDetail">
	<summary>
 Returns the currently selected report
 </summary>
	<value>ReportDetail</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.CurrentRow">
	<summary>
 Returns the currently selected row
 </summary>
	<value>CurrentRow</value>
	<returns>Current</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.SelectedDashboardReport">
	<summary>
 Returns the currently selected row in the Dashboard
 </summary>
	<value>SelectedDashboardReport</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.IsDashboardNewReport">
	<summary>
 Defines if the report is newly added on the Report Dashboard
 </summary>
	<value>IsDashboardNewReport</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.NewRoleCode">
	<summary>
 Gets the current role code of the system
 </summary>
	<value>NewRoleCode</value>
	<returns></returns>
	<example>
		<code lang="CS" inline="False">
		</code>
		<code lang="VB" title="NewRoleCode" description="Returns the current role code of the system">
 Dim m_reportWizardControl as New Designer.ReportWizard
 m_reportWizardControl.NewRoleCode = "Admin"
    </code>
		<code lang="CS" title="NewRoleCode" description="Returns the current role code of the system">
 Designer.ReportWizard m_reportWizardControl = new Designer.ReportWizard();
 m_reportWizardControl.NewRoleCode = "Admin";
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.LanguageCode">
	<summary>
 Gets the current language of the system
 </summary>
	<value>LanguageCode</value>
	<returns>"English - United States"</returns>
	<example>
		<code lang="CS" inline="False">
		</code>
		<code lang="VB" title="LanguageCode" description="Returns the currentlanguage the system">
 Dim m_reportWizardControl as New Designer.ReportWizard
 m_reportWizardControl.LanguageCode = "English - United States"
    </code>
		<code lang="CS" title="LanguageCode" description="Returns the current language of the system">
 Designer.ReportWizard m_reportWizardControl = new Designer.ReportWizard();
 m_reportWizardControl.LanguageCode = "English - United States";
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.MenuGroupCode">
	<summary>
 Gets the current menu group or module of the report
 </summary>
	<value>MenuGroupCode</value>
	<returns>"Customer"</returns>
	<example>
		<code lang="CS" inline="False">
		</code>
		<code lang="VB" title="MenuGroupCode" description="Returns the currentlanguage the system">
 Dim m_reportWizardControl as New Designer.ReportWizard
 m_reportWizardControl.MenuGroupCode = "Customer"
    </code>
		<code lang="CS" title="MenuGroupCode" description="Returns the current language of the system">
 Designer.ReportWizard m_reportWizardControl = new Designer.ReportWizard();
 m_reportWizardControl.MenuGroupCode = "Customer";
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.FormclassTypeString">
	<summary>
 Returns the form class type of the current report
 </summary>
	<value></value>
	<returns>FormclassTypeString</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.UserRoleReport">
	<summary>
	</summary>
	<value>UserRoleReport</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.TableNameString">
	<summary>
 Gets the tablename/s to be binded on the report
 </summary>
	<value>TableNameString</value>
	<returns>"CustomerSalesOrder"</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.ReportOwner">
	<summary>
 Shows the list of the forms
 </summary>
	<value>ReportOwner</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.ReportTypeLayout">
	<summary>
 Property that assigns or access ReportTypeLayout
 </summary>
	<value>ReportTypeLayout</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.CreateLableReport">
	<summary>
 This method is called when the report to be processed is a label report
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.ModifyReport">
	<summary>
 Modifies and saves the created report in the related table
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.AddNewSystemUserRoleMenuReportLanguage(System.Int32,System.Guid,System.Byte[],System.Byte[],Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset.SystemMenuReportDescriptionTemplateRow,System.String)">
	<summary>
 Saves the data on the database
 </summary>
	<param name="p_loops"></param>
	<param name="p_reportCode"></param>
	<param name="p_byteReport"></param>
	<param name="p_byteData"></param>
	<param name="p_dr"></param>
	<param name="m_LanguageCode"></param>
	<returns></returns>
	<remarks>Implemented before/after events ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.AddNewSystemUserRoleMenuReport(System.Guid,System.Byte[],System.Byte[],Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset.SystemUserRoleMenuReportRow)">
	<summary>
 Saves the data on the database
 </summary>
	<param name="p_reportCode"></param>
	<param name="p_byteReport"></param>
	<param name="p_byteData"></param>
	<param name="p_dr"></param>
	<returns></returns>
	<remarks>implemented before/after events..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.OpenReport(DevExpress.XtraReports.UI.XtraReport)">
	<summary>
 Opens a particular report
 </summary>
	<param name="report"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.GetPageBoundField(System.Windows.Forms.Control,System.String[])">
	<summary>
	</summary>
	<param name="parent"></param>
	<param name="tables"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.Enablecombo">
	<summary>
 Method that changes the property Enable to True or False
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.tabReportDesignerWizard_BeforePageDisplayed(System.Object,Interprise.Presentation.Base.ExtendedXtraTabContol.SelectedPageChangingEventArgs)">
	<summary>
 Validates every page of the Report Wizard 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.tabReportDesignerWizard_Finished(System.Object,System.EventArgs)">
	<summary>
 Lets you choose on Modify or Preview
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportWizardControl.tabReportDesignerWizard_SelectedPageChanged(System.Object,DevExpress.XtraTab.TabPageChangedEventArgs)">
	<summary>
 Method use to create a section control and attached them to the main control. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportTypeControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Dim m_currentDataset as Interprise.Framework.Base.DatasetComponent.BaseDataset
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return m_currentDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Base.DatasetComponent.BaseDataset m_currentDataset;
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return m_currentDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportTypeControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportTypeControl.</summary>
	<value>CurrentFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportTypeControl.ReportDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportDataset" description="Gets the dataset of the current report">
 Dim m_ReportDataset as Interprise.Framework.Base.DatasetComponent.BaseDataset
 Public Overrides ReadOnly Property ReportDataset() As Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_ReportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Base.DatasetComponent.BaseDataset m_ReportDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset ReportDataset 
 {
 get { return m_ReportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportTitleControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Dim m_currentDataset as Interprise.Framework.Base.DatasetComponent.BaseDataset
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return m_currentDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Base.DatasetComponent.BaseDataset m_currentDataset;
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return m_currentDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportTitleControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportTitleControl.</summary>
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportTitleControl.ReportDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Dim m_ReportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportTempDataset
 Public Overrides ReadOnly Property ReportDataset() As Interprise.Framework.Report.DatasetComponent.Common.ReportTempDataset
 Get
 Return m_ReportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportTempDataset m_ReportDataset;
 public override Framework.Base.DatasetComponent.BaseDataset ReportDataset 
 {
 get { return m_ReportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportTitleControl.ReportDataDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportDataDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportDataDataset" description="Gets the dataset of the current report">
 Dim m_ReportDataDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset 
 Public Overrides ReadOnly Property ReportDataDataset() As Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset 
 Get
 Return m_ReportDataDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportDataDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset m_ReportDataDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset ReportDataDataset 
 {
 get { return m_ReportDataDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportTitleControl.ReportAction">
	<summary>
 Gets the namespace of a particular report
 </summary>
	<value>ReportAction</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportTitleControl.Modify">
	<summary>
 Determines whether to modify or not the textbox
 </summary>
	<value>Modify</value>
	<returns>True or False</returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportTitleControl.AttachedImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportTitleControl.LoadReport">
	<summary>
 Shows the report
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportTitleControl.NewLayoutDesign">
	<summary>
 Creates the new appearance of the report
 </summary>
	<example>
		<code lang="VB" title="NewLayoutDesign" description="Updates the new appearance of the report.">
 Dim m_ReportTitleControl As New ReportWizard.ReportTitleControl
 m_ReportTitleControl.NewLayoutDesign()
    </code>
		<code lang="CS" title="NewLayoutDesign" description="Updates the new appearance of the report.">
 ReportWizard.ReportTitleControl m_ReportTitleControl = new ReportWizard.ReportTitleControl();
 m_ReportTitleControl.NewLayoutDesign();
    </code>
	</example>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportSummaryControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Dim m_currentDataset as Interprise.Framework.Base.DatasetComponent.BaseDataset
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return m_currentDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Base.DatasetComponent.BaseDataset m_currentDataset;
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return m_currentDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportSummaryControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportSummaryControl.</summary>
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportSummaryControl.ReportDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportDataset" description="Gets the dataset of the current report">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportTempDataset 
 Public Overrides ReadOnly Property CurrentDataset() As Interprise.Framework.Report.DatasetComponent.Common.ReportTempDataset 
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportTempDataset  m_reportDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportTempDataset  CurrentDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportSummaryControl.LoadGridSettings">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportSummaryControl.ValidateColumn">
	<summary>
 This method allows you to specify whether the edited value is valid and whether the editor is allowed to lose focus. 
 </summary>
	<returns></returns>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportSummaryControl.AddColumnInElements(System.Data.DataRow[])">
	<summary>
 Adds columns in the related table
 </summary>
	<param name="selectedTableDetailRows"></param>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportSummaryControl.RemoveColumnInElements(System.Data.DataTable,System.Int32)">
	<summary>
 Removes a currently selected row of the related table
 </summary>
	<param name="dt"></param>
	<param name="rowNum"></param>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportSummaryControl.GetTableNameString">
	<summary>
	</summary>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportSummaryControl.GetSourceColumns">
	<summary>
	</summary>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStylePropertyControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStylePropertyControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportDetailControl.</summary>
	<value>CurrentFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade myFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStylePropertyControl.ReportDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportDataset" description="Gets the dataset of the current report">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property ReportDataset() As Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset ReportDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStylePropertyControl.PropertyClass">
	<summary>
	</summary>
	<value>PropertyClass</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportStylePropertyControl.PropertyGrid">
	<summary>
 Assign the PropertyClss(ReportStyleProperty) to the Pop-upContainer
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportStylePropertyControl.TxtStyleName_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
	<summary>
 To change focus style name base on what is specified: TxtStyleName
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportStylePropertyControl.DeleteStyles_Click(System.Object,System.EventArgs)">
	<summary>
 Delete a record with the specified index from the property grid
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportStylePropertyControl.DeleteAllStyles_Click(System.Object,System.EventArgs)">
	<summary>
 Delete a record with the specified index from the property grid
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportStylePropertyControl.ClearTxtStyleName">
	<summary>
 Clears the text of the textbox
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.BackColor">
	<summary>
 Gets or sets the background color of an XRControl object. 
 </summary>
	<value>BackColor</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.BorderColor">
	<summary>
 Gets or sets the border color of an XRControl object. 
 </summary>
	<value>BorderColor</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.Borders">
	<summary>
 Specifies the borders displayed around a brick. 
 </summary>
	<value>Borders</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.BorderWidth">
	<summary>
 Gets or sets the border width of an XRControl object (in pixels). 
 </summary>
	<value>BorderWidth</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.Font">
	<summary>
 Gets or sets a font for the XRControl object and all its child objects. 
 </summary>
	<value>Font</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.ForeColor">
	<summary>
 Gets or sets the foreground color for an XRControl object. 
 </summary>
	<value>ForeColor</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.UseBackColor">
	<summary>
 Return or sets the value of UseBackColor
 </summary>
	<value>UseBackColor</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.UseBorderColor">
	<summary>
 Return or sets the value of UseBorderColor
 </summary>
	<value>UseBorderColor</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.UseBorders">
	<summary>
  Return or sets the value of UseBorders
 </summary>
	<value>UseBorders</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.UseBorderWidth">
	<summary>
 Return or sets the value of UseBorderWidth
 </summary>
	<value>UseBorderWidth</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.UseFont">
	<summary>
 Return or sets the value of UseFont
 </summary>
	<value>UseFont</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.UseForeColor">
	<summary>
 Return or sets the value of UseForeColor
 </summary>
	<value>UseForeColor</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.SerializeColor(System.Drawing.Color)">
	<summary>
 Save the state of an object and recreate it as needed, providing storage of objects as well as data exchange
 </summary>
	<param name="p_color"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.DeserializeColor(System.String)">
	<summary>
 Gets or sets whether the value of a SettingsProperty object has been deserialized. 
 </summary>
	<param name="p_color"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
	<summary>
 Returns the name displayed in a Field List for the name of a table or column item. 
 </summary>
	<param name="info"></param>
	<param name="context"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleProperty.OnDeserialization(System.Object)">
	<summary>
 Represents the class used to implement deserialization functionality in the reports
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportStyleControl.</summary>
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleControl.ReportDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportDataset" description="Gets the dataset of the current report">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property ReportDataset() As Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset ReportDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleControl.ReportStylename">
	<summary>
 Returns an <strong>ReportStylename</strong> currently
 handled by the ReportStyleControl.
 </summary>
	<value>ReportStylename</value>
	<returns>Style Name</returns>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportStyleControl.ListStyle_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Shows the preview of the report according to styles
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportLayoutControl.ReportDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportDataset" description="Gets the dataset of the current report">
 Dim m_ReportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property ReportDataset() As Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_ReportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_ReportDataset;
 public override Framework.Base.DatasetComponent.BaseDataset ReportDataset 
 {
 get { return m_ReportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportLayoutControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportLayoutControl.</summary>
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Extendable.Base.Facade.IBaseInterface m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportLayoutControl.ReportLayoutName">
	<summary>
 Returns an <strong>ReportLayoutName</strong> currently handled by the ReportLayoutControl.
 </summary>
	<value>ReportLayoutName.</value>
	<returns>Layout Name</returns>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportLayoutControl.Orientation">
	<summary>
 Returns an <strong>Orientation</strong> currently
 handled by the ReportLayoutControl.
 </summary>
	<value>String.</value>
	<returns>Type of Paper Orientation</returns>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportLayoutControl.ReportStylename">
	<summary>
 Returns an <strong>ReportStylename</strong> currently
 handled by the ReportStyleControl.
 </summary>
	<value>ReportStylename</value>
	<returns>Style Name</returns>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportLayoutControl.AttachedImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportLayoutControl.cboLayout_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Shows the actual picture of the particular layout
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportLayoutControl.rdoOrientation_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Determines the type of paper orientation
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportLayoutControl.ListStyle_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 Shows the preview of the report according to styles
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportLabelTemplateControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Dim m_ReportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return m_ReportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_ReportDataset;
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return m_ReportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportLabelTemplateControl.ReportDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Dim m_ReportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property ReportDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return m_ReportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_ReportDataset;
 public override Framework.Base.DatasetComponent.BaseDataset ReportDataset 
 {
 get { return m_ReportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportLabelTemplateControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportDetailControl.</summary>
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportLabelTemplateControl.LabelTemplateString">
	<summary>
	</summary>
	<value>LabelTemplateString</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Dim m_currentDataset as Framework.Base.DatasetComponent.BaseDataset
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return m_currentDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 Framework.Base.DatasetComponent.BaseDataset m_currentDataset;
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return m_currentDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.CurrentFacade">
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade myFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.ReportDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property CurrentDataset() As Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset CurrentDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.AddColumnInElement(System.Data.DataRow[])">
	<summary>
 Adds columns in related table
 </summary>
	<param name="selectedTableDetailRows"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.AddColumnInElements(System.Data.DataRow[])">
	<summary>
 Adds columns in related table
 </summary>
	<param name="selectedTableDetailRows"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.RemoveColumnInElements(System.Data.DataTable,System.Int32)">
	<summary>
 Removes a currently selected row of the related table
 </summary>
	<param name="dt"></param>
	<param name="rowNum"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.btnIncludeGroupElements_Click(System.Object,System.EventArgs)">
	<summary>
 Transfer and add one row from one grid to another grid
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.btnDecludeGroupElements_Click(System.Object,System.EventArgs)">
	<summary>
 Removes a currently selected row of the related table
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.btnIncludeAllGroupElements_Click(System.Object,System.EventArgs)">
	<summary>
 Transfer and add all rows from one grid to another grid
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.btnDecludeAllGroupElements_Click(System.Object,System.EventArgs)">
	<summary>
 Remove all rows in a treelist
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.btnIncludeColumnData_Click(System.Object,System.EventArgs)">
	<summary>
 Transfer and add one row from one grid to another grid
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.btnDecludeColumnData_Click(System.Object,System.EventArgs)">
	<summary>
 Removes a currently selected row of the related table
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.btnIncludeAllColumnData_Click(System.Object,System.EventArgs)">
	<summary>
 Transfer and add all rows from one grid to another grid
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportGroupingSortControl.btnDecludeAllColumnData_Click(System.Object,System.EventArgs)">
	<summary>
 Remove all rows in a grid
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportFaxControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return WordProcessorDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return WordProcessorDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportFaxControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportEmailControl.</summary>
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_WordprocessorFacade as  Interprise.Facade.Base.WordProcessor.WordProcessorFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_WordprocessorFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
  Interprise.Facade.Base.WordProcessor.WordProcessorFacade m_WordprocessorFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_WordprocessorFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportFaxControl.SubjectString">
	<summary>
 Gets the subject of the fax
 </summary>
	<value>faxSubjectString</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportFaxControl.IsUseFaxHeader">
	<summary>
 Defines whether to use or not to use a header for fax
 </summary>
	<value>IsUseFaxHeader</value>
	<returns></returns>
	<example>
		<code lang="CS" inline="False">
		</code>
		<code lang="VB" title="IsUseFaxHeader" description="Use or not to use a fax header.">
 Dim m_reportFaxControl as new Designer.ReportWizard
 m_reportFaxControl.IsUseFaxHeader = True
    </code>
		<code lang="CS" title="IsUseFaxHeader" description="Use or not to use a fax header.">
 Designer.ReportWizard m_reportFaxControl = new Designer.ReportWizard();
 m_reportFaxControl.IsUseFaxHeader = true;
    </code>
	</example>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportFaxControl.FillFaxBodyControl(Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Gets the content of fax
 </summary>
	<param name="Selectedrow"></param>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportFaxControl.disablecontrolwhenNew">
	<summary>
 Disable some controls when creating a new email
 </summary>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportFaxControl.disablecontrolwhenExisting">
	<summary>
 Disable some controls when an email is already created
 </summary>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportFaxControl.EnableallControlwhenCreate">
	<summary>
 Enable some controls when creating an email
 </summary>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportFaxControl.UpdateFaxMergeTemplate(System.String)">
	<summary>Updates the fax merger template</summary>
	<example>
		<code lang="VB" title="UpdateFaxMergeTemplate" description="Updates fax merge template">
 Dim m_reportFacade As New Interprise.Facade.Report.ReportFacade(New Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset, "1179")
 Dim m_ReportFaxControl As New ReportWizard.ReportFaxControl(New Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset, m_reportFacade)
 m_ReportFaxControl.UpdateFaxMergeTemplate("CustomerSalesOrder")
    </code>
		<code lang="CS" title="UpdateFaxMergeTemplate" description="Updates fax merge template">
 Interprise.Facade.Report.ReportFacade m_reportFacade = New Interprise.Facade.Report.ReportFacade(New Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset(), "1179");
 ReportWizard.ReportFaxControl m_ReportFaxControl = New ReportWizard.ReportFaxControl(New Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset(), m_reportFacade);
 m_ReportFaxControl.UpdateFaxMergeTemplate("CustomerSalesOrder");
    </code>
	</example>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportFaxControl.GetFaxBodyControl">
	<summary>
 Creates the email control
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportFaxControl.InitializeControl">
	<summary>
 Calls the method to create the control
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportEmailControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return WordProcessorDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return WordProcessorDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportEmailControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportEmailControl.</summary>
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_WordprocessorFacade as  Interprise.Facade.Base.WordProcessor.WordProcessorFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_WordprocessorFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
  Interprise.Facade.Base.WordProcessor.WordProcessorFacade m_WordprocessorFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_WordprocessorFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportEmailControl.SubjectString">
	<summary>
 Gets the subject of the email
 </summary>
	<value>SubjectString</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportEmailControl.fillEmailBodyControl(Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Gets the email content
 </summary>
	<param name="Selectedrow"></param>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportEmailControl.disablecontrolwhenNew">
	<summary>
 Disable some controls when creating a new email
 </summary>
	<remarks> Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportEmailControl.disablecontrolwhenExisting">
	<summary>
 Disable some controls when an email is already created
 </summary>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportEmailControl.EnableallControlwhenCreate">
	<summary>
 Enable some controls when creating an email
 </summary>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportEmailControl.UpdateEMailMergeTemplate(System.String)">
	<summary>Updates the email merger template</summary>
	<example>
		<code lang="VB" title="UpdateEmailMergeTemplate" description="Updates email merge template">
 Dim m_reportFacade As New Interprise.Facade.Report.ReportFacade(New Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset, "1179")
 Dim m_ReportEmailControl As New ReportWizard.ReportEmailControl(New Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset, m_reportFacade)
 m_ReportEmailControl.UpdateEmailMergeTemplate("CustomerSalesOrder")
    </code>
		<code lang="CS" title="UpdateEmailMergeTemplate" description="Updates email merge template">
 Interprise.Facade.Report.ReportFacade m_reportFacade = New Interprise.Facade.Report.ReportFacade(New Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset(), "1179");
 ReportWizard.ReportEmailControl m_ReportEmailControl = New ReportWizard.ReportEmailControl(New Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset(), m_reportFacade);
 m_ReportEmailControl.UpdateEmailMergeTemplate("CustomerSalesOrder");
    </code>
	</example>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportEmailControl.EmailLoadDataset(System.String,System.String)">
	<summary>
 Reads the data for email
 </summary>
	<param name="reportName">Gets the name of the current report</param>
	<param name="Languagecode">This is the current language code</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportEmailControl.GetEmailBodyControl">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportEmailControl.InitializeControl">
	<summary>
 Calls the method to create the control
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportDetailsControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportDetailsControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportDetailControl.</summary>
	<value>CurrentFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportDetailsControl.GetTableNameString">
	<summary>
	</summary>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportDetailsControl.GetSourceColumns">
	<summary>
	</summary>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportDetailsControl.CreateTableNameTab">
	<summary>
	</summary>
	<remarks>Made a before and after event ..p.t</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportCriteriaControl.ReportDataset">
	<summary>
Returns the dataset for the customized reports
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="DatasetReportData" description="Gets the dataset of the current report">
 Dim m_reportDataDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset
 Public Overrides ReadOnly Property DatasetReportData() As Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset
 Get
 Return m_reportDataDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="DatasetReportData" description="Gets the dataset of the current report">
 Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset m_reportDataDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset DatasetReportData 
 {
 get { return m_reportDataDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportCriteriaControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportCriteriaControl.</summary>
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade myFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportCriteriaControl.TableNameString">
	<summary>
 Returns an <strong>TableNameString</strong> currently
 handled by the ReportCriteriaControl.
 </summary>
	<value>TableNameString</value>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportCriteriaControl.ListOfTables">
	<summary>Retrieves the value in the combobox</summary>
	<requirements>ComboBox</requirements>
	<value>CboString</value>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ReportCriteriaControl.ParentTableName">
	<summary>
 Returns an <strong>ParentTableName</strong> currently
 handled by the ReportCriteriaControl.
 </summary>
	<value>ParentTableName</value>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportCriteriaControl.GetParentNode(DevExpress.XtraTreeList.Nodes.TreeListNode)">
	<summary>
 Gets the parent node or the parent table name of the sub tablenames.
 </summary>
	<param name="Node"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportCriteriaControl.searchcombocategoryname_popupclose(System.Object,Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Used to assign selected values from the search combo list
 </summary>
	<param name="sender"></param>
	<param name="erow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportCriteriaControl.btnIncludeDetail_Click(System.Object,System.EventArgs)">
	<summary>
 Transfer and add one row from one treelist to another treelist
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportCriteriaControl.btnDecludeDetail_Click(System.Object,System.EventArgs)">
	<summary>
 Removes a currently selected row of the related table
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportCriteriaControl.btnIncludeGroupDetail_Click(System.Object,System.EventArgs)">
	<summary>
 Transfer and add all rows from one treelist to another treelist
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.ReportCriteriaControl.btnDecludeGroupDetail_Click(System.Object,System.EventArgs)">
	<summary>
 Remove all rows in a treelist
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.LabelInformationControl.CurrentDataset">
	<summary>
 Property that sets the current dataset
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim myDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return myDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset myDataset;
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return myDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.LabelInformationControl.CurrentFacade">
	<summary>Returns the business facade to be handled by LabelInformationControl.</summary>
	<value>BaseFacade</value>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.LabelInformationControl.ReportDataset">
	<summary>
 Returns the dataset use in making default reports
 </summary>
	<value>ReportDataset</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderForm.ReportDesignerDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportdesignerDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportDesignerDataset" description="Gets the dataset of the current report">
 Dim m_ReportDesignerDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset
 Public Overrides ReadOnly Property ReportDesignerDataset() As  Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_ReportDesignerDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportDesignerDataset" description="Gets the dataset of the current report">
  Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_ReportDesignerDataset;
 public override Framework.Report.DatasetComponent.Common.ReportSourceDataset ReportDesignerDataset 
 {
 get { return m_ReportDesignerDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderForm.ReportDesignerFacade">
	<summary>Returns the business facade to be handled by ReportWizardControl.</summary>
	<value>ReportDesignerFacade</value>
	<example>
		<code lang="VB" title="ReportDesignerFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportDesignerFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property ReportDesignerFacade() As Interprise.Facade.Report.ReportFacade
 Get
 Return m_ReportDesignerFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportDesignerFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportDesignerFacade;
 public override Interprise.Facade.Report.ReportFacade ReportDesignerFacade 
 {
 get { return m_ReportDesignerFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderForm.FaxStructure">
	<summary>
 Gets the content of the editor
 </summary>
	<value>FaxStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderForm.FaxSubject">
	<summary>
 Gets the subject of the fax
 </summary>
	<value>FaxSubject</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderForm.FaxTemplateSource">
	<summary>
 Gets the source of the fax
 </summary>
	<value>FaxTemplateSource</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderForm.FaxStructureName">
	<summary>
 Gets the name of the fax
 </summary>
	<value>FaxStructureName</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderForm.SelectedDataRow">
	<summary>
 Gets the current selected report 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.FaxDraftLoaderForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ExtendStyleProperty.ReportLayoutName">
	<summary>
 Returns the layoutname
 </summary>
	<value>string</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.ExtendStyleProperty.ReportStyleName">
	<summary>
 Returns the stylename
 </summary>
	<value>string</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.CustomizedLabelOptionsControl.CurrentDataset">
	<summary>
 Property that sets the current dataset
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim myDataset as Framework.Base.DatasetComponent.BaseDataset
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Base.DatasetComponent.BaseDataset
 Get
 Return myDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Framework.Base.DatasetComponent.BaseDataset myDataset;
 public override Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return myDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.CustomizedLabelOptionsControl.CurrentFacade">
	<summary>Returns the business facade to be handled by CustomizedLabelOptionsControl.</summary>
	<value>BaseFacade</value>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportWizard.CustomizedLabelOptionsControl.ReportDataset">
	<summary>
 Returns the dataset use in making default reports
 </summary>
	<value>ReportDataset</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportWizard.CustomizedLabelOptionsControl.ExposeLabelInfo(System.Data.DataRow)">
	<summary>
 Sets the propert of the label reports
 </summary>
	<param name="m_LabelInfo"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.SummaryTemplate.NewStyle(System.String)">
	<summary>
 Triggers when a layout style was selected.
 </summary>
	<param name="Liststyle">This is layout style</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportTemplateLayout.SetCompanyAddressString">
	<summary>
 Returns Address
 </summary>
	<value>SetCompanyAddressString</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportTemplateLayout.SetCompanyAddress2String">
	<summary>
 Returns Address
 </summary>
	<value>SetCompanyAddress2String</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportTemplateLayout.Copy">
	<summary>
 Returns the ReportTemplateLayout which contains the properties needed by the reports
 </summary>
	<returns>ReportTemplateLayout</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.CurrentDataset">
	<summary>
 Returns the dataset use in making default reports
 </summary>
	<value>ReportDataset</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.CurrentFacade">
	<summary>
 Returns the instance of the business facade that will be use by the ReadData and SaveData method.
 </summary>
	<value>CurrentFacade</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.ReportDataset">
	<summary>
 Returns the dataset use in making default reports
 </summary>
	<value>ReportDataset</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.DatasetReportData">
	<summary>
 Returns the dataset in making customized reports
 </summary>
	<value>DatasetReportData</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.Layout">
	<summary>
 Determines the layout of the report
 </summary>
	<value>Layout</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.Title">
	<summary>
 Returns the report title 
 </summary>
	<value>Title</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.ReportQuery">
	<summary>
 Returns ReportQuery of the ReportDataset
 </summary>
	<value>ReportQuery</value>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.ReportQueries">
	<summary>
 Returns Query String as ArrayList
 </summary>
	<value>ReportQueries</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.DataBindingElement.PropertyName">
	<summary>
 Property to assign or access the PropertyName
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.DataBindingElement.ColumnName">
	<summary>
 Property to assign or access the ColumnName
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.DataBindingElement">
	<summary>
 Assigns the binding of the report
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.ReportData(System.String,Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset)">
	<summary>
 Sets the datasource of the report
 </summary>
	<param name="cbostring">Gets the value of the object ie.cbostring</param>
	<param name="reportData">This is dataset of the created report</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.GetDataSizeInPixel(System.String,System.Drawing.Font)">
	<summary>
 Sets the font of the report
 </summary>
	<param name="m_data"></param>
	<param name="m_font">Types of font</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.BuildXtraReport(System.IO.MemoryStream)">
	<summary>
 Shows the customized report
 </summary>
	<param name="memoryStream"></param>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.CreateReportLayoutBands(System.String,System.String,Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset,DevExpress.XtraReports.UI.XtraReport)">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<param name="m_layoutString">The variable which determines what kind of layout the current report has</param>
	<param name="m_reportStyleString">The variable which determines what kind of style sheet of the current report  has</param>
	<param name="m_reportDataset">The dataset use by the current report</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.CreateMultiDataBands(Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset)">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<param name="m_reportDataset">The dataset use by the current report</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.SpaceOfData(Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset)">
	<summary>
 Adjusts the spacing of the report elements
 </summary>
	<param name="m_reportdataDataset">The dataset use by the current report</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.CreateLabelsAndDataField(System.Data.DataColumn)">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<param name="m_dataColumn">This is the columnName of the report</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.BindHeader">
	<summary>
 Sets the Company Information
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.SetCompanyAddress">
	<summary>
 Sets the Company Information
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.ControlLabel_CheckBand(DevExpress.XtraReports.UI.Band)">
	<summary>
 Gets the band type 
 </summary>
	<param name="m_band"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.ControlLabel_GroupHeader(DevExpress.XtraReports.UI.GroupHeaderBand)">
	<summary>
 Binds the report elements
 </summary>
	<param name="m_groupHeaderBand"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.ControlLabel_Rebind">
	<summary>
 Gets the current databindings information
 </summary>
	<example>
		<code lang="VB" title="ControlLabel_Rebind" description="Saves the databindings information">
 Dim m_DocumentToPrint As New DevExpress.XtraReports.UI.XtraReport
 DirectCast(m_DocumentToPrint, Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine).ControlLabel_Rebind()
    </code>
		<code lang="CS" title="ControlLabel_Rebind" description="Saves the databindings information">
 DevExpress.XtraReports.UI.XtraReport m_DocumentToPrint = new DevExpress.XtraReports.UI.XtraReport();
 ((Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine)m_DocumentToPrint).ControlLabel_Rebind();
    </code>
	</example>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.ReportFacadeEngine.ReportFacadeEngine_BeforePrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
	<summary>
 Occurs before an XRControl object creates its image in a report being previewed or printed. 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.OutlineTemplate.NewStyle(System.String)">
	<summary>
 Triggers when a layout style was selected.
 </summary>
	<param name="Liststyle">This is layout style</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.LabelTemplate.NewStyle(System.String)">
	<summary>
 Triggers to update the layout the report
 </summary>
	<param name="Liststyle">Types of the Report Layout</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.BaseReportStandardTemplate.NewStyle(System.String)">
	<summary>
 Triggers when a layout style was selected.
 </summary>
	<param name="Liststyle">This is layout style</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportTemplate.BaseFormReportTemplate.NewStyle(System.String)">
	<summary>
 Triggers when a layout style was selected.
 </summary>
	<param name="Liststyle">This is layout style</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportBarcode.Binding">
	<summary>
 Shows the sub category under Bookmark
 </summary>
	<value>Binding</value>
	<returns></returns>
	<remarks>Initializes a new instance of the XRBindingCollection class with default settings. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportBarcode.FormatString">
	<summary>
 Shows the sub category under Bookmark
 </summary>
	<value>FormatString</value>
	<returns></returns>
	<remarks>Used to represent numeric and date/time values in a standard or custom form.</remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportBarcode.NavigateURL">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>NavigateURL</value>
	<returns></returns>
	<remarks>Specifies the URL to navigate to when the XRControl object is clicked. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportBarcode.Tag">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>Tag</value>
	<returns></returns>
	<remarks>Gets or sets the object that contains data about this control. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportBarcode.Text">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>Text</value>
	<returns></returns>
	<remarks>Gets or sets the text associated with the XRControl object.</remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportBarcode.Orientation">
	<summary>
 Shows the sub category under Orientation
 </summary>
	<value>Orientation</value>
	<returns></returns>
	<remarks>Gets or sets how a barcode should be rotated in a report. </remarks>
</member><member name="M:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportBarcode.OnDeserialization(System.Object)">
	<summary>
 Represents the class used to implement deserialization functionality in the reports
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportBarcode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
	<summary>
 Returns the name displayed in a Field List for the name of a table or column item. 
 </summary>
	<param name="info"></param>
	<param name="context"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportBarcode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
	<summary>
 Creates Category in the Property box
 </summary>
	<param name="info"></param>
	<param name="context"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportCheckbox.Bookmark">
	<summary>
 Shows the sub category under Bookmark
 </summary>
	<value>Bookmark</value>
	<returns></returns>
	<remarks>Gets or sets the text of a bookmark for this XRControl object. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportCheckbox.CheckState">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>CheckState</value>
	<returns></returns>
	<remarks>Gets or sets the current state of the XRCheckBox object. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportCheckbox.NavigateURL">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>NavigateURL</value>
	<returns></returns>
	<remarks>Specifies the URL to navigate to when the XRControl object is clicked. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportCheckbox.Tag">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>Tag</value>
	<returns></returns>
	<remarks>Gets or sets the object that contains data about this control. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportCheckbox.Text">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>Text</value>
	<returns></returns>
	<remarks>Gets or sets the text associated with the XRControl object.</remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportCheckbox.Checked">
	<summary>
 Shows the sub category under Checked
 </summary>
	<value>Checked</value>
	<returns></returns>
	<remarks>Gets or sets a value indicating whether the check box control can be set to the System.Windows.Forms.CheckState.Indeterminate value. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportCheckbox.CheckStates">
	<summary>
 Shows the sub category under CheckedState
 </summary>
	<value>CheckStates</value>
	<returns></returns>
	<remarks>Gets or sets the current state of the XRCheckBox object. </remarks>
</member><member name="M:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportCheckbox.OnDeserialization(System.Object)">
	<summary>
  Represents the class used to implement deserialization functionality in the reports
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportCheckbox.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
	<summary>
 Returns the name displayed in a Field List for the name of a table or column item. 
 </summary>
	<param name="info"></param>
	<param name="context"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportLabel.Bookmark">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>Bookmark</value>
	<returns></returns>
	<remarks>Gets or sets the text of a bookmark for this XRControl object. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportLabel.NavigateURL">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>NavigateURL</value>
	<returns></returns>
	<remarks>Specifies the URL to navigate to when the XRControl object is clicked. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportLabel.Tag">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>Tag</value>
	<returns></returns>
	<remarks>Gets or sets the object that contains data about this control. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportLabel.Text">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>Text</value>
	<returns></returns>
	<remarks>Gets or sets the text associated with the XRControl object. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportLabel.Func">
	<summary>
 Shows the sub category under Summary
 </summary>
	<value>Func</value>
	<returns></returns>
	<remarks>Specifies the arithmetic function to be calculated. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportLabel.Running">
	<summary>
 Shows the sub category under Summary
 </summary>
	<value>Running</value>
	<returns></returns>
	<remarks>Specifies the report area, for which the selected function is calculated. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportLabel.Multiline">
	<summary>
 Shows the sub category under Multiline
 </summary>
	<value>Multiline</value>
	<returns></returns>
	<remarks>Gets or sets a value specifying whether carriage returns (CRLF) stored in a label's text should be processed. </remarks>
</member><member name="M:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportLabel.OnDeserialization(System.Object)">
	<summary>
 Represents the class used to implement deserialization functionality in the reports
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportLabel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
	<summary>
 Returns the name displayed in a Field List for the name of a table or column item. 
 </summary>
	<param name="info"></param>
	<param name="context"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPageInfo.Bookmark">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPageInfo.Tag">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>Tag</value>
	<returns></returns>
	<remarks>Gets or sets the object that contains data about this control.</remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPageInfo.NavigateURL">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>NavigateURL</value>
	<returns></returns>
	<remarks>Specifies the URL to navigate to when the XRControl object is clicked.</remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPageInfo.PageInfo">
	<summary>
 Shows the sub category under PageInfo
 </summary>
	<value></value>
	<returns></returns>
	<remarks>Contains the values that define what kind of information is displayed in the current DevExpress.XtraPrinting.PageInfoBrick. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPageInfo.StartNumber">
	<summary>
 Shows the sub category under PageInfo
 </summary>
	<value>StartNumber</value>
	<returns></returns>
	<remarks>Gets or sets the value used as the number to start numbering the pages from within the XRPageInfo control. </remarks>
</member><member name="M:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPageInfo.OnDeserialization(System.Object)">
	<summary>
 Represents the class used to implement deserialization functionality in the reports
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPageInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
	<summary>
 Returns the name displayed in a Field List for the name of a table or column item. 
 </summary>
	<param name="info"></param>
	<param name="context"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPictureBox.Bookmark">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>Bookmark</value>
	<returns></returns>
	<remarks>Gets or sets the text of a bookmark for this XRControl object.</remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPictureBox.Image">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>Image</value>
	<returns></returns>
	<remarks>Gets or sets the image that the XRPictureBox control displays. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPictureBox.ImageURL">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>ImageURL</value>
	<returns></returns>
	<remarks>Has a default String.Empty</remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPictureBox.NavigateURL">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>NavigateURL</value>
	<returns></returns>
	<remarks>Specifies the URL to navigate to when the XRControl object is clicked.</remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPictureBox.Tag">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value></value>
	<returns>Tag</returns>
	<remarks>Gets or sets the object that contains data about this control.</remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPictureBox.Images">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>Images</value>
	<returns></returns>
	<remarks>Gets or sets the image that the XRPictureBox control displays. </remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPictureBox.ImageURLs">
	<summary>
 Shows the sub category under DataBindings
 </summary>
	<value>ImageURLs</value>
	<returns></returns>
	<remarks>Has a default String.Empty</remarks>
</member><member name="M:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPictureBox.OnDeserialization(System.Object)">
	<summary>
 Represents the class used to implement deserialization functionality in the reports
 </summary>
	<param name="sender"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.ReportPictureBox.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
	<summary>
 Returns the name displayed in a Field List for the name of a table or column item. 
 </summary>
	<param name="info"></param>
	<param name="context"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.SubCategoryofSubCategory.Binding">
	<summary>
 Initializes a new instance of the XRBindingCollection class with default settings. 
 </summary>
	<value>Binding</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.ReportProperties.ReportPropertiesClass.SubCategoryofSubCategory.FormatString">
	<summary>
 Used to represent numeric and date/time values in a standard or custom form.
 </summary>
	<value>FormatString</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportPropertiesForm.ReportDetail">
	<summary>
 Returns the currently selected Report.
 </summary>
	<value>ReportDetail</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportPropertiesForm.SelectedDashboardReport">
	<summary>
 Returns the currently selected row in the Dashboard
 </summary>
	<value>SelectedDashboardReport</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportPropertiesForm.PropertyClass">
	<summary>
 Property that assigns the Property Class of the Main Control
 </summary>
	<value>PropertyClass</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportPropertiesForm.Binding">
	<summary>
 Property that lets you bind a control to a data source
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportPropertiesForm.CreateControls">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportPropertiesForm.onOkClick(System.Object,System.EventArgs)">
	<summary>
 Calls the SaveData of the main control
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportPropertiesForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportPropertiesControl.PluginContainerReportProperties_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerMainControl.GetreportStructure">
	<summary>
	</summary>
	<value>GetreportStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerMainControl.ReportDetail">
	<summary>
 Returns the currently selected report
 </summary>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerMainControl.ReportDocument">
	<summary>
 The current report document/file in the designer
 </summary>
	<value>ReportDocument</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerMainControl.ResetLayout">
	<summary>
 Method that gets the original state of the report
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerMainControl.SaveAndCreate">
	<summary>
 Shows the Save As File Dialog
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerMainControl.PluginContainerReportDesignerMain_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerForm.ReportCurrentControl">
	<summary>
 Returns the ReportCurrentControl of the main control
 </summary>
	<value>ReportCurrentControl</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerForm.ReportDocument">
	<summary>
 The current report document/file in the designer
 </summary>
	<value>ReportDocument</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerForm.ReportDetail">
	<summary>
 Returns the currently selected Report.
 </summary>
	<value>ReportDetail</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerForm.SelectedDashboardReport">
	<summary>
 Returns the currently selected row in the Dashboard
 </summary>
	<value>SelectedDashboardReport</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerForm.PropertyClass">
	<summary>
 Returns PropertyClass of the ReportDesignerControl
 </summary>
	<value>PropertyClass</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerForm.Binding">
	<summary>
 Property that lets you bind a control to a data source
 </summary>
	<value>Binding</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerForm.IsDashBoardReport">
	<summary>
 Checks if report/s is/are visible on the dashboard
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerForm.GetreportStructure">
	<summary>
	</summary>
	<value>GetreportStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.AttachedImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.DisableResetLayoutOnFirstRun">
	<summary>
 Disables the Reset Layout button in the Report Designer on first load of the report
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.LableDisableOnrun">
	<summary>
 Controls are temporarily disable when creating the Label Report
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.ShowDialog(Interprise.Presentation.Report.Documents.ReportBase)">
	<summary>
 Shows the report using the DevExpress.XtraReports.UI.XtraReport
 </summary>
	<param name="reportDocument">The current report document/file in the designer</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.ShowDialog(System.IO.MemoryStream)">
	<summary>
 Shows the styles and layouts of the reports fetch from the database
 </summary>
	<param name="reportStream"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.CreateControls">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.OnNew">
	<summary>
 Shows the Report Wizard
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.IsSaving(System.Boolean)">
	<summary>
 Method that lets you update or not to update reports
 </summary>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.NotifyOnSaving(Interprise.Presentation.Report.Designer.ReportDesignerForm.OnSaving)">
	<summary>
 Invoke delegate if saving is successful, this notifies the dashboard that the designer is making changes on the database, 
 invokes the dashboard to fetch a fresh data from the datasource.
 </summary>
	<param name="value"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.ResetLayout">
	<summary>
 Method that gets the original state of the report
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.SaveAndCreate">
	<summary>
 Shows the Save As File Dialog
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.ReportDesignerForm_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 Activates the shortcut keys
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.m_designerControl_OnSaving">
	<summary>
 Invoke delegate if saving is successful, this notifies the dashboard that the designer is making changes on the database, 
 invokes the dashboard to fetch a fresh data from the datasource.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.ReportDesignerForm_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 Shows the Property Grid
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.wizardCallsUpdate">
	<summary>
 Gets the updates in Report Writer
 </summary>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.CurrentDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Gets the dataset of the current report">
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return GatewayReportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Gets the dataset of the current report">
 public override Framework.Report.DatasetComponent.Common.ReportSourceDataset CurrentDataset 
 {
 get { return GatewayReportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.CurrentFacade">
	<summary>Returns the business facade to be handled by ReportDetailControl.</summary>
	<value>CurrentFacade</value>
	<example>
		<code lang="VB" title="CurrrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.ReportDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportDataset" description="Gets the dataset of the current report">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property CurrentDataset() As Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportDataset" description="Gets the dataset of the current report">
 public override Framework.Report.DatasetComponent.Common.ReportSourceDataset CurrentDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.CriteriaDataByte">
	<summary>
 This is the byte created during the creation of the criteria
 </summary>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.CriteriaSchemaByte">
	<summary>
 This is the schema created during the creation of the criteria
 </summary>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.StringCriteriaString">
	<summary>
 This is the selected criteria you edited in the Report designer
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.EmailStructure">
	<summary>
 Gets the content of the editor
 </summary>
	<value>EmailStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.EmailSubject">
	<summary>
 Gets the subject of the email
 </summary>
	<value>EmailSubject</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.EmailTemplateSource">
	<summary>
 Gets the source of the email
 </summary>
	<value>EmailTemplateSource</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.EmailStructureName">
	<summary>
 Gets the structure name of the email
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.FaxStructure">
	<summary>
 Gets the content of the editor
 </summary>
	<value>FaxStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.FaxSubject">
	<summary>
 Gets the subject of the fax
 </summary>
	<value>FaxSubject</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.FaxTemplateSource">
	<summary>
 Gets the source of the fax
 </summary>
	<value>FaxTemplateSource</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.FaxStructureName">
	<summary>
 Gets the structure name of the email
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.ReportDetail">
	<summary>
 Returns the currently selected report
 </summary>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.IsPropertyVisible">
	<summary>
 Sets the PanelToolBar's property Visible to either true or false
 </summary>
	<value>IsPropertyVisible</value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.SelectedDashboardReport">
	<summary>
 Retuns the Active Dashboard
 </summary>
	<value>SelectedDashboardReport</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.PropertyClass">
	<summary>
 Returns PropertyClass
 </summary>
	<value>PropertyClass</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.Binding">
	<summary>
 Property that lets you bind a control to a data source
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.IsDashBoardReport">
	<summary>
 Checks if report/s is/are visible on the dashboard
 </summary>
	<value>IsDashBoardReport</value>
	<returns>True or False</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.UserRoleReport">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.GetreportStructure">
	<summary>
	</summary>
	<value>GetreportStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ReportDesignerControl.ReportDocument">
	<summary>
 The current report document/file in the designer
 </summary>
	<value>ReportDocument</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.CallEvents">
	<summary>
 Calls the method for saving the report
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.OpenReport(System.Object)">
	<summary>
 Opens a report in the designer panel.
 </summary>
	<param name="report"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.UndoChanges">
	<summary>
 Rejects any changes
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.EnableDisableControls(System.Boolean,System.Boolean)">
	<summary>
 Sets the property of MenuBarItems Enable to either True or False
 </summary>
	<param name="void"></param>
	<param name="posted"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.ViewReport(Interprise.Presentation.Report.Documents.ReportBase,Interprise.Framework.Base.Shared.Enum.ReportCategory)">
	<summary>
 Displays the report
 </summary>
	<param name="reportDocument"></param>
	<param name="reportCategory"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.UpdateDataSet(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Saves information in the database
 </summary>
	<param name="confirm">Checks whether to update the information</param>
	<param name="clear">Checks whether to clear the inforamation</param>
	<param name="isUseCache">Checks whether the table is use in Cache</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.ReadData">
	<summary>
 Reads the data from database before saving
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.ReadSourceData">
	<summary>
 Reads the data from database before saving
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.EndLoadDataSet(System.IAsyncResult)">
	<summary>
 Ends the asynchronous read begun by BeginLoadDataset
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.SetRequiredDashBoardAppearance">
	<summary>
 Updates the reports on the dashboard
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.SetFunction(System.Object)">
	<summary>
 Setting a report area where the function is applied
 </summary>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.EmailDraft">
	<summary>
 Calls the method to create the control
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.FaxDraft">
	<summary>
 Calls the method to create the control
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.GetFaxDetail">
	<summary>
 Gets the row for fax
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.GetEmailDetail">
	<summary>
 Gets the row for email
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.ChangeDatasouce">
	<summary>
 Calls the method to create the control
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.RedimReportTables">
	<summary>
 This method shows the current table of the report.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ReportDesignerControl.ShowPrintDialog">
	<summary>
 Calls the method to create the control
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.NewGalleryForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.NewGalleryDetailControl.AttachedImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.NewGalleryControl.PluginContainerNewGallery_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderControl.ReportSourceDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportSourceDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportSourceDataset" description="Gets the dataset of the current report">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset
 Public Overrides ReadOnly Property ReportDataset() As Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportSourceDataset" description="Gets the dataset of the current report">
 Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Framework.Report.DatasetComponent.Common.ReportSourceDataset ReportSourceDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderControl.FaxStructure">
	<summary>
 Gets the content of the editor
 </summary>
	<value>FaxStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderControl.FaxStructureName">
	<summary>
 Gets the name of the fax
 </summary>
	<value>FaxStructureName</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderControl.FaxSubject">
	<summary>
 Gets the subject of the fax
 </summary>
	<value>FaxSubject</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderControl.FaxTemplateSource">
	<summary>
 Gets the source of the fax
 </summary>
	<value>FaxTemplateSource</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderControl.IsUseFaxHeader">
	<summary>
 Eithee use or not to use a fax header
 </summary>
	<value>IsUseFaxHeader</value>
	<returns>True or False</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftLoaderControl.SelectedDataRow">
	<summary>
 Gets the selected row
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.FaxDraftLoaderControl.InitializeControl">
	<summary>
 Calls the method to create the control
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.FaxDraftLoaderControl.FillFaxBodyControl(Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Gets the fax content
 </summary>
	<param name="Selectedrow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.FaxDraftLoaderControl.GetTextEditorControl">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.FaxDraftLoaderControl.SetFilter(System.Data.DataRow)">
	<summary>
 Gets the current fax for the current report
 </summary>
	<param name="p_datarow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.FaxDraftLoaderControl.PluginContainerFaxDraftGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftGeneralHeaderControl.ReportSourceDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportSourceDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportSourceDataset" description="Gets the dataset of the current report">
 Dim m_reportDataDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset
 Public Overrides ReadOnly Property ReportSourceDataset() As Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportSourceDataset" description="Gets the dataset of the current report">
 Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset ReportSourceDataset 
 {
 get { return m_reportDataDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftGeneralHeaderControl.FaxStructureName">
	<summary>
 Gets the name of the fax
 </summary>
	<value>FaxStructureName</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftGeneralHeaderControl.FaxSubject">
	<summary>
 Gets the subject of the fax
 </summary>
	<value>FaxSubject</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.FaxDraftGeneralHeaderControl.FaxTemplateSource">
	<summary>
 Gets the source of the fax
 </summary>
	<value>FaxTemplateSource</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.FaxDraftGeneralHeaderControl.disablecontrolwhenNew">
	<summary>
 Disable some controls when creating a new email
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.FaxDraftGeneralHeaderControl.disablecontrolwhenExisting">
	<summary>
 Disable some controls when an email is already created
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.FaxDraftGeneralHeaderControl.EnableallControlwhenCreate">
	<summary>
 Enable some controls when creating an email
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftLoaderForm.ReportdesignerDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportdesignerDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportdesignerDataset" description="Gets the dataset of the current report">
 Dim m_ReportDesignerDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset
 Public Overrides ReadOnly Property ReportdesignerDataset() As  Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_ReportDesignerDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportSourceDataset" description="Gets the dataset of the current report">
  Framework.Report.DatasetComponent.Common.ReportSourceDataset m_ReportDesignerDataset;
 public override Framework.Report.DatasetComponent.Common.ReportSourceDataset ReportdesignerDataset 
 {
 get { return m_ReportDesignerDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftLoaderForm.ReportDesignerFacade">
	<summary>Returns the business facade to be handled by ReportWizardControl.</summary>
	<value>ReportDesignerFacade</value>
	<example>
		<code lang="VB" title="ReportDesignerFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportDesignerFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property ReportDesignerFacade() As Interprise.Facade.Report.ReportFacade
 Get
 Return m_ReportDesignerFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportDesignerFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportDesignerFacade;
 public override Interprise.Facade.Report.ReportFacade ReportDesignerFacade 
 {
 get { return m_ReportDesignerFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftLoaderForm.EmailStructure">
	<summary>
 Gets the content of the editor
 </summary>
	<value>EmailStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftLoaderForm.EmailSubject">
	<summary>
 Gets the subject of the email
 </summary>
	<value>EmailSubject</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftLoaderForm.EmailTemplateSource">
	<summary>
 Gets the source of the email
 </summary>
	<value>EmailTemplateSource</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftLoaderForm.EmailStructureName">
	<summary>
 Gets the name of the email
 </summary>
	<value>EmailStructureName</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftLoaderForm.SelectedDataRow">
	<summary>
 Gets the current selected report 
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.EmailDraftLoaderForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftLoaderControl.ReportSourceDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportSourceDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportSourceDataset" description="Gets the dataset of the current report">
 Dim m_reportDataDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset
 Public Overrides ReadOnly Property ReportSourceDataset() As Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportSourceDataset" description="Gets the dataset of the current report">
 Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset ReportSourceDataset 
 {
 get { return m_reportDataDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftLoaderControl.EmailStructure">
	<summary>
 Gets the content of the editor
 </summary>
	<value>EmailStructure</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftLoaderControl.EmailSubject">
	<summary>
 Gets the subject of the email
 </summary>
	<value>EmailSubject</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftLoaderControl.SelectedDataRow">
	<summary>
 Gets the selected row
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.EmailDraftLoaderControl.InitializeControl">
	<summary>
 Calls the method to create the control
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.EmailDraftLoaderControl.fillEmailBodyControl(Interprise.Framework.Base.EventArguments.Search.RowSelectedEventArgs)">
	<summary>
 Gets the email content
 </summary>
	<param name="Selectedrow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.EmailDraftLoaderControl.GetTextEditorControl">
	<summary>
 Method use to create the section control and attached them to the main control. 
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.EmailDraftLoaderControl.SetFilter(System.Data.DataRow)">
	<summary>
 Gets the current email for the current report
 </summary>
	<param name="p_datarow"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.EmailDraftLoaderControl.PluginContainerGeneral_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftGeneralHeaderControl.ReportSourceDataset">
	<summary>
 Property that gets the current dataset of the report
 </summary>
	<value>ReportSourceDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="ReportSourceDataset" description="Gets the dataset of the current report">
 Dim m_reportDataDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset
 Public Overrides ReadOnly Property ReportSourceDataset() As Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="ReportSourceDataset" description="Gets the dataset of the current report">
 Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Interprise.Framework.Report.DatasetComponent.Common.ReportDataDataset ReportSourceDataset 
 {
 get { return m_reportDataDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.EmailDraftGeneralHeaderControl.EmailSubject">
	<summary>
 Gets the subject of the email
 </summary>
	<value>EmailSubject</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.EmailDraftGeneralHeaderControl.disablecontrolwhenNew">
	<summary>
 Disable some controls when creating a new email
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.EmailDraftGeneralHeaderControl.disablecontrolwhenExisting">
	<summary>
 Disable some controls when an email is already created
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.EmailDraftGeneralHeaderControl.EnableallControlwhenCreate">
	<summary>
 Enable some controls when creating an email
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ChangeDatasourceForm.ReportDocument">
	<summary>
 the current report document/file in the designer
 </summary>
	<value>reportdocument</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ChangeDatasourceForm.PanelBody_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.Designer.ChangeDatasourceControl.ReportDocument">
	<summary>
 the current report document/file in the designer
 </summary>
	<value>reportdocument</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ChangeDatasourceControl.btnIncludeDetail_Click(System.Object,System.EventArgs)">
	<summary>
 Transfer and add one row from one treelist to another treelist
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ChangeDatasourceControl.btnDecludeDetail_Click(System.Object,System.EventArgs)">
	<summary>
 Removes a currently selected row of the related table
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ChangeDatasourceControl.btnIncludeGroupDetail_Click(System.Object,System.EventArgs)">
	<summary>
 Transfer and add all rows from one treelist to another treelist
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Designer.ChangeDatasourceControl.btnDecludeGroupDetail_Click(System.Object,System.EventArgs)">
	<summary>
 Remove all rows in a treelist
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.ReportTreeControl.CurrentDataset">
	<summary>
 Property that sets the current dataset
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Public Overrides ReadOnly Property CurrentDataset() As Interprise.Framework.Base.DatasetComponent.BaseDataset
 Get
 Return GatewayReportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 public override Interprise.Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return GatewayReportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.ReportTreeControl.CurrentFacade">
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.ReportTreeControl.ApplyStyle">
	<summary>
 Apply default style on selected/focused row
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.ReportTreeControl.AttachedImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.ReportTreeControl.ToolTipMgr_GetActiveObjectInfo(System.Object,DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs)">
	<summary>
 Manages the Description of each report shown in Tool Tip.
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.CurrentDataset">
	<summary>
 Property that sets the current dataset
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Public Overrides ReadOnly Property CurrentDataset() As Interprise.Framework.Base.DatasetComponent.BaseDataset
 Get
 Return GatewayReportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 public override Interprise.Framework.Base.DatasetComponent.BaseDataset CurrentDataset 
 {
 get { return GatewayReportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.CurrentFacade">
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_ReportFacade as Interprise.Facade.Report.ReportFacade
 Public Overrides ReadOnly Property CurrentFacade() As Extendable.Base.Facade.IBaseInterface
 Get
 Return m_ReportFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Facade.Report.ReportFacade m_ReportFacade;
 public override Extendable.Base.Facade.IBaseInterface CurrentFacade 
 {
 get { return m_ReportFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.DashBoardCurrentReport">
	<summary>
 Gets the current report in the report dashboard
 </summary>
	<value>DashBoardCurrentReport</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.Entity">
	<summary>
 Set the Entity For Filtering the Reports Assigned in each Module.
 </summary>
	<value>Entity</value>
	<returns>"Customer"</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.IsMonthEnd">
	<summary>
 Defines the reports as whether they are month-end reports or not
 </summary>
	<value>IsMonthEnd</value>
	<returns>True or False</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.IsMonthEndReport(DevExpress.XtraTreeList.Nodes.TreeListNode)">
	<summary>
 Defines the reports as whether they are month-end reports or not
 </summary>
	<param name="node"></param>
	<value>IsMonthEndReport</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.IsMonthEndSetup">
	<summary>
 Defines the reports as whether they are month-end reports or not
 </summary>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.ModuleClassType">
	<summary>
 Returns the namespace of the active module.
 </summary>
	<value>ModuleClassType</value>
	<returns>"Customer"</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.CurrentReportCommand">
	<summary>
 Gets the methods in BaseReportCommand
 </summary>
	<value>CurrentReportCommand</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.ReportAction">
	<summary>
 Returns the Report Tag
 </summary>
	<value>ReportAction</value>
	<returns>"1179"</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.ReportDetail">
	<summary>
 Returns the currently selected Report.
 </summary>
	<value>ReportDetail</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.SearchFacade">
	<value>BaseFacade</value>
	<example>
		<code lang="VB" title="SearchFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_searchFacade as New Interprise.Facade.Base.ListControlFacade
 Public Overrides ReadOnly Property CurrentFacade() As Interprise.Facade.Base.ListControlFacade
 Get
 Return m_searchFacade
 End Get
 End Property
    </code>
		<code lang="CS" title="SearchFacade" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
Interprise.Facade.Base.ListControlFacade m_searchFacade = new Interprise.Facade.Base.ListControlFacade();
 public override Interprise.Facade.Base.ListControlFacade CurrentFacade 
 {
 get { return m_searchFacade; }
 }
    </code>
	</example>
	<remarks>
 The instance of business facade object to be returned by this property should
 inherit from the <strong>Interprise.Facade.BaseFacade</strong>
	</remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.ZoomState">
	<summary>
 Gets the magnification scale for the preview of the report
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.WorkCompleted(System.IAsyncResult)">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.Execute(Interprise.Framework.Base.Shared.Enum.DashboardActionType,Interprise.Framework.Base.Shared.Structure.SearchParameters,System.Object[])">
	<summary>
 Execute the Method to fetch data from the database and populates the tables specified in the parameters.
 </summary>
	<example>
		<code lang="VB" title="Execute" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Execute(DashboardActionType.None, Nothing)
    </code>
		<code lang="CS" title="Execute" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 void[,] Execute = new void[DashboardActionType.None + 1, null + 1];
    </code>
	</example>
	<param name="actionType">Returns the DashboardActionType.</param>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.ExecuteAllColumns">
	<summary>
 Excecute all the reports as Month-End Reports or Dashboard Reports
 </summary>
	<example>
		<code lang="VB" title="ExecuteAllColumns" description="Identifies wether the reports are for month-end or dashboard reports.">
 ExecuteAllColumns()
    </code>
		<code lang="CS" title="ExecuteAllColumns" description="Identifies wether the reports are for month-end or dashboard reports.">
 ExecuteAllColumns;
    </code>
	</example>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.OnPrintDialog">
	<summary>
 Methods to print the report
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.ReadReportData(System.String[][],System.String[][])">
	<summary>
	</summary>
	<param name="commandSet">Tablenames, Stored procedure, and the parameters in reading the data of the report</param>
	<param name="params"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.RefreshDashBoardReports">
	<summary>
 Checks if there are changes in the reports.
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.ResetReportLayout(System.Data.DataRow)">
	<summary>
 Resets the object to its orgininal state.
 </summary>
	<param name="ReportDetail">Gets the current datarow.</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.SetRequiredDashBoardAppearance">
	<summary>
 This method was called when there are changes in the layout of the report.
 </summary>
	<example>
		<code lang="VB" title="SetRequiredDashBoardAppearance()" description="This method was called when there are changes in the layout of the report.">
 SetRequiredDashBoardAppearance()
    </code>
		<code lang="CS" title="SetRequiredDashBoardAppearance" description="This method was called when there are changes in the layout of the report.">
 void[] SetRequiredDashBoardAppearance;
    </code>
	</example>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.PluginContainerSectionDetail_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportDashboardControl.PluginContainerSectionReport_InitializePlugin(System.Object,System.EventArgs)">
	<summary>
 Initializes the plugin assigned to the container using the Interprise plugin framework.
 </summary>
	<param name="sender">The object instance that invoked the event</param>
	<param name="e">The event argument passed by the sender</param>
	<remarks>Code generated by Interprise Solution's Plugin Initialization Code Generator. Modifying the generated code manually may cause errors.</remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportAvatar.ReportDataset">
	<summary>
 Property that sets the current dataset
 </summary>
	<value>CurrentDataset</value>
	<returns></returns>
	<example>
		<code lang="VB" title="CurrentDataset" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Dim m_reportDataset as Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset
 Public Overrides ReadOnly Property CurrentDataset() As Interprise.Framework.Report.DatasetGateway.ReportDatasetGateway
 Get
 Return m_reportDataset
 End Get
 End Property
    </code>
		<code lang="CS" title="CurrentDataset" description="Execute the Method to fetch data from the database and populates the tables specified in the parameters.">
 Interprise.Framework.Report.DatasetComponent.Common.ReportSourceDataset m_reportDataset;
 public override Interprise.Framework.Report.DatasetGateway.ReportDatasetGateway CurrentDataset 
 {
 get { return m_reportDataset; }
 }
    </code>
	</example>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportAvatar.DesignerEventTriggered">
	<summary>
	</summary>
	<value></value>
	<example>
		<code inline="False">
		</code>
		<code lang="VB" title="DesignerEventTriggered">
 Dim m_BaseReportAvatar as new Dashboard.BaseReportAvatar
 m_BaseReportAvatar.DesignerEventTriggered = True
    </code>
		<code lang="CS" title="DesignerEventTriggered">
 Dashboard.BaseReportAvatar m_BaseReportAvatar = new Dashboard.BaseReportAvatar();
 m_BaseReportAvatar.DesignerEventTriggered = True
    </code>
	</example>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportAvatar.ViewSize">
	<summary>
 This is the magnification scale
 </summary>
	<value></value>
	<example>
		<code inline="False">
		</code>
		<code lang="VB" title="ViewSize">
 Dim m_BaseReportAvatar as new Dashboard.BaseReportAvatar
 m_BaseReportAvatar.ViewSize = 0.7
    </code>
		<code lang="CS" title="ViewSize">
 Dashboard.BaseReportAvatar m_BaseReportAvatar = new Dashboard.BaseReportAvatar();
 m_BaseReportAvatar.ViewSize = 0.7;
    </code>
	</example>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Dashboard.BaseReportAvatar.AvatarOn">
	<summary>
 Shows the PictureAvatar or PrintAvatar
 </summary>
	<value></value>
	<example>
		<code inline="False">
		</code>
		<code lang="VB" title="AvatarOn">
 Dim m_BaseReportAvatar as new Dashboard.BaseReportAvatar
 m_BaseReportAvatar.AvatarOn = True
    </code>
		<code lang="CS" title="AvatarOn">
 Dashboard.BaseReportAvatar m_BaseReportAvatar = new Dashboard.BaseReportAvatar();
 m_BaseReportAvatar.AvatarOn = true;
    </code>
	</example>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportAvatar.AttachedImages">
	<summary>
	</summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportAvatar.LoadDataSet(System.String[][],Interprise.Framework.Base.Shared.Enum.ClearType)">
	<summary>
 Reads the data of the report
 </summary>
	<param name="commandSet">Contains the tablenames, stored procedures or even parameters for the report</param>
	<param name="clearTableType">Returns whether to cleae all, none or specific the data</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportAvatar.ProcessAvatar(System.Boolean)">
	<summary>
 Makes PictureAvatar and PrintAvatar visible or not visible on the Report
 Dashboard
 </summary>
	<example>
		<code inline="False">
		</code>
		<code lang="VB" title="ProcessAvatar" description="Makes the PictureAvatar and PrintAvatar either visible or not on the dashboard.">
 Dim m_BaseReportAvatar As New Dashboard.BaseReportAvatar
 m_BaseReportAvatar.ProcessAvatar(False)
    </code>
		<code lang="CS" title="ProcessAvatar" description="Makes the PictureAvatar and PrintAvatar either visible or not on the dashboard.">
 Dashboard.BaseReportAvatar m_BaseReportAvatar = new Dashboard.BaseReportAvatar();
 m_BaseReportAvatar.ProcessAvatar(false);
    </code>
	</example>
	<param name="IsAvatarOff">Determines if the value passed is True or false. </param>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportAvatar.ShowAvatar(System.Data.DataRow)">
	<summary>
 Shows the Currently Selected reports in the Avatar.
 </summary>
	<param name="ReportDetail">Returns the currently selected Report. </param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.Dashboard.BaseReportAvatar.ZoomAvatar(System.Decimal,System.Boolean)">
	<summary>
 Zooms in or out the PrintAvatar
 </summary>
	<param name="m_size">This is the magnification scale</param>
	<param name="IsZoomIn">Determines if the user wants zoom in or out.</param>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.Criteria.CriteriaBuilderControl.IgnoreSavedCriteria">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.ReportSourceEditor.ReportDocument">
	<summary>
 The current report document/file in the designer
 </summary>
	<value>ReportDocument</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.ReportSourceEditor.ReturnLayout(System.Guid,System.Boolean,System.String,System.String)">
	<summary>
 Returns the report layout based on the report code passed
 </summary>
	<param name="p_ReportCode"></param>
	<param name="IsSubReport"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_TableName">
	<summary>
 The name of the table
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_ColumnName">
	<summary>
 The data column name
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_ColumnValueFrom">
	<summary>
 The starting value
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_ColumnValueTo">
	<summary>
 The ending value
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_Comparison">
	<summary>
 The comparison operator
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_Conjunction">
	<summary>
 The logical operator
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_ColumnType">
	<summary>
 The type of the data column
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_DataType">
	<summary>
 The data type of the data column
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_IsPullDownList">
	<summary>
 Is the filter a pull down list
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_IsStaticList">
	<summary>
 Is the filter a static list
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_PullDownListTable">
	<summary>
 The name of the of the pull down table
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_PullDownListTableColumn">
	<summary>
 The name of the of the pull down table column
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_PullDownListAdditionalFilter">
	<summary>
 The additional filter
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_LineNum">
	<summary>
 The line number in the filter list
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_StaticList">
	<summary>
 The posible list of values
 </summary>
</member><member name="P:Interprise.Presentation.Report.CommonClass.FilterListStruct.Comparison">
	<summary>
 Gets/sets the comparison operator
 </summary>
</member><member name="P:Interprise.Presentation.Report.CommonClass.FilterListStruct.Conjunction">
	<summary>
 Gets/sets the logical operator
 </summary>
</member><member name="P:Interprise.Presentation.Report.CommonClass.FilterListStruct.ColumnName">
	<summary>
 Gets/sets the column name
 </summary>
</member><member name="P:Interprise.Presentation.Report.CommonClass.FilterListStruct.ColumnValueFrom">
	<summary>
 Gets/sets the staring values
 </summary>
</member><member name="P:Interprise.Presentation.Report.CommonClass.FilterListStruct.ColumnValueTo">
	<summary>
 Gets/sets the ending values
 </summary>
</member><member name="P:Interprise.Presentation.Report.CommonClass.FilterListStruct.FilterString">
	<summary>
 Gets the filter string
 </summary>
</member><member name="P:Interprise.Presentation.Report.CommonClass.FilterListStruct.ColumnType">
	<summary>
 Gets/sets the column type
 </summary>
</member><member name="P:Interprise.Presentation.Report.CommonClass.FilterListStruct.DataType">
	<summary>
 Gets/sets the data type
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.FilterListStruct.m_DisplayName">
	<summary>
 The display name of the data column
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.CompanyInfoStruct.m_CompanyAddress">
	<summary>
 Returns the Company's address
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.DataBindingStruct.m_ControlName">
	<summary>
 The control name
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.DataBindingStruct.m_Bindings">
	<summary>
 The databindings of the control
 </summary>
</member><member name="P:Interprise.Presentation.Report.CommonClass.DataBindingStruct.Bindings">
	<summary>
 Gets/Sets databindings of the control
 </summary>
</member><member name="P:Interprise.Presentation.Report.CommonClass.DataBindingStruct.ControlName">
	<summary>
 Gets/Sets The name of the control
 </summary>
</member><member name="F:Interprise.Presentation.Report.CommonClass.BaseReportCommand.m_FilterList">
 A collection FilterStruct

</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.UserEmailAccountCode">
	<summary>
 Gets the current email account code of the user
 </summary>
	<value>UserEmailAccountCode</value>
	<returns>guid-type</returns>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.EmailTemplate">
	<summary>
 Sets the subject and content of email
 </summary>
	<value>EmailTemplate</value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.FaxTemplate">
	<summary>
 Sets the subject and the content of fax
 </summary>
	<value>FaxTemplate</value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ReportDestination">
	<summary>
 Gets the current destination for printing, sending or previewing the report
 </summary>
	<value>ReportDestination</value>
	<returns>"Printer"</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.RecepientContactCode">
	<summary>
 Gets the current contact code.
 </summary>
	<value>RecepientContactCode</value>
	<returns>"CCTC-000002"</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.RecepientEmailAddress">
	<summary>
 Gets the email address of the user
 </summary>
	<value>RecepientEmailAddress</value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.RecepientFaxNumber">
	<summary>
 Gets the fax number of the user
 </summary>
	<value>RecepientFaxNumber</value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.RecepientFaxExtension">
	<summary>
 Gets the fax extension number of the user
 </summary>
	<value>RecepientFaxExtension</value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ReportDocument">
	<summary>
 Gets the active report
 </summary>
	<value>ReportDocument</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ReportDataset">
	<summary>
 Gets the ReportDataset
 </summary>
	<value>ReportDataset</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ReportFacadeEngine">
	<summary>
 Engine Used to create newly created reports or customize reports.
 </summary>
	<value></value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ReportDetail">
	<summary>
 Returns the currently selected Report. 
 </summary>
	<value>ReportDetail</value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.TableNames">
	<summary>
 Returns tableNames
 </summary>
	<value>TableNames</value>
	<returns>"CustomerSalesOrder"</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.CurrentControl">
	<summary>
 Returns the currently selected control
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.CurrentReportAction">
	<summary>
 Returns the tag of currently selected report
 </summary>
	<value>CurrentReportAction</value>
	<returns>"1179"</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ExportFormat">
	<summary>
 Gets the file extension of the the report
 </summary>
	<value>ExportFormat</value>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ProgressMessage">
	<summary>
 Gets the message when editing, saving or printing the report.
 </summary>
	<value>ProgressMessage</value>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.IsInitializeData">
	<summary>
 Initializes data of the report
 </summary>
	<value>IsInitializeData</value>
	<returns>True or False</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.PrinterName">
	<summary>
 Gets the printer name 
 </summary>
	<value>PrinterName</value>
	<returns>"SnagIt7"</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.NumberOfPrintedCopy">
	<summary>
 Gets the number of copies of the report
 </summary>
	<value>NumberOfPrintedCopy</value>
	<returns>"2"</returns>
	<remarks></remarks>
</member><member name="P:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ReportFilters">
	<summary>
 Gets/Sets the report filters
 </summary>
	<remarks>The report filters is being used to generate the WHERE clause of the query</remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ConvertReportToPDFFile(System.String,System.Data.DataSet)">
	<summary>
 Convert the file extension of the created report
 </summary>
	<param name="reportName">The name of the report</param>
	<param name="reportData">The dataset where the report is binded</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.CreateEmail(System.String,DevExpress.XtraReports.UI.XtraReport,System.Data.DataSet,System.String,System.String,System.Boolean)">
	<summary>
 Creates an email when you supply the Email Control in Report Wizard
 </summary>
	<param name="reportName">The name of the current report</param>
	<param name="reportToShow"></param>
	<param name="reportData"></param>
	<param name="toName"></param>
	<param name="toEmail"></param>
	<param name="isFax"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.CreateRecepients(DevExpress.XtraReports.UI.XtraReport,System.Data.DataSet)">
	<summary>
 Creates the receipient for the report
 </summary>
	<param name="reportToShow"></param>
	<param name="reportDataset"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.GetReportDocument(Interprise.Framework.Base.Shared.Enum.ReportAction)">
	<example>
		<code lang="CS" inline="False">
		</code>
		<code lang="VB" title="GetReportDocument" description="Gets the report action of the current report.">
 GetReportDocument("1179")
    </code>
		<code lang="CS" title="GetReportDocument" description="Gets the report action of the current report.">
 void[] GetReportDocument = new void["1179" + 1];
    </code>
	</example>
	<summary>Gets the ReportAction of the current report.</summary>
	<param name="report">The report action of the current report</param>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.GetReportDataset(Interprise.Framework.Base.Shared.Enum.ReportAction)">
	<example>
		<code lang="VB" title="GetReportDataset" description="Gets the dataset of the current report.">
 GetReportDataset("1179")
    </code>
		<code lang="CS" title="GetReportDataset" description="Gets the dataset of the current report.">
 void[] GetReportDataset = new void["1179" + 1];
    </code>
	</example>
	<summary>Gets the dataset of the current report.</summary>
	<param name="report">The report action of the current report</param>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.Print(Interprise.Framework.Base.Shared.Enum.ReportAction)">
	<summary>
 Prints the currently selected item/transaction
 </summary>
	<param name="report">Gets the current report action of the report</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.Print(Interprise.Framework.Base.Shared.Enum.ReportAction,System.String[][])">
	<summary>
 Prints the currently selected item/transaction
 </summary>
	<param name="report">Gets the current report action of the report</param>
	<param name="params">Additional condition when printing the report</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.Print(Interprise.Framework.Base.Shared.Enum.ReportAction,System.String[][],Interprise.Framework.Base.Shared.Enum.PrintDirection)">
	<summary>
 Prints the currently selected item/transaction
 </summary>
	<param name="report">Gets the current report action of the report</param>
	<param name="params">Additional condition when printing the report</param>
	<param name="direction">Gets the current destination for printing, sending or previewing the report</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.Print(Interprise.Framework.Base.Shared.Enum.ReportAction,System.String[][],Interprise.Framework.Base.Shared.Enum.PrintDirection,System.Boolean)">
	<summary>
 Prints the currently selected item/transaction
 </summary>
	<param name="report">Gets the current report action of the report</param>
	<param name="params">Additional condition when printing the report</param>
	<param name="direction">Gets the current destination for printing, sending or previewing the report</param>
	<param name="isAlternateRow">Checks if it uses an alternating row usually used in Accounting reports</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.PrintAsyncCancel">
	<summary>
 Speeds up the printing and cancelling of the reports
 </summary>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.PrintAsync(System.Data.DataView,Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway,Interprise.Framework.Report.Shared.Structure.PrinterSettings[],System.Drawing.Printing.PaperSize,System.String)">
	<summary>
 Speeds up the printing of the report
 </summary>
	<param name="dataViewReportDetails">Passes dataview where the report is binded</param>
	<param name="gatewayPrintDialogDataset">&gt;Gets the dataset used by the printer</param>
	<param name="reportPrinterSettings">Gets the printer settings of the report</param>
	<param name="defaultPaperSize">Gets the default paper size</param>
	<param name="mainCriteria">Gets the criteria of the particular report</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.Print(System.Data.DataView,Interprise.Framework.Report.DatasetGateway.PrintDialogDatasetGateway,Interprise.Framework.Report.Shared.Structure.PrinterSettings[],System.Drawing.Printing.PaperSize,System.String)">
	<summary>
 Prints the currently selected item/transaction
 </summary>
	<param name="dataViewReportDetails">Passes dataview where the report is binded</param>
	<param name="gatewayPrintDialogDataset">Gets the dataset used by the printer</param>
	<param name="reportPrinterSettings">Gets the printer settings of the report</param>
	<param name="defaultPaperSize">Gets the default paper size</param>
	<param name="mainCriteria">Gets the criteria of the particular report</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.Print(Interprise.Framework.Base.Shared.Enum.ReportAction,System.String[][],Interprise.Framework.Base.Shared.Enum.PrintDirection,System.Boolean,System.Boolean)">
	<summary>
 Prints the currently selected item/transaction.
 </summary>
	<param name="report">Gets the current report action of the report</param>
	<param name="params">Additional condition when printing the report</param>
	<param name="direction">Gets the current destination for printing, sending or previewing the report</param>
	<param name="isAlternateRow">Checks if it uses an alternating row usually used in Accounting reports</param>
	<param name="isLoadToDesigner">Checks if it use in report designer</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ExportReport(System.Object,Interprise.Framework.Base.Shared.Enum.ReportExportFormats,System.String)">
	<summary>
 Exports one report format to other formats
 </summary>
	<param name="format">This is the file extension</param>
	<param name="fileName">This is the report name to be conveted to other formats.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.PreviewReport(System.Object)">
	<summary>
 Gets the appearance setting of the report
 </summary>
	<param name="state"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ShowCompleted(System.Object)">
	<summary>
 Shows when printing is done successfully.
 </summary>
	<param name="state"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ShowProgress(System.Object)">
	<summary>
 Shows when printing is in progress.
 </summary>
	<param name="state"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.UpdateProgress(System.String)">
	<summary>
 Returns a message whether it is done successfully or in progress.
 </summary>
	<param name="message">A message to inform when printing is in progress or done successfully.</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.ShowReport(Interprise.Presentation.Report.Documents.ReportBase,System.Data.DataSet,System.Boolean)">
	<summary>
  Displays the report to the user. This method attached the requested report to the base report as 'subreport'
 </summary>
	<param name="reportToShow">Shows what report to be displayed</param>
	<param name="reportDataset">The dataset where the report is binded</param>
	<param name="isLoadToDesigner">Defines whether to use it in the report designer</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.SendEmails(Interprise.Presentation.Report.CommonClass.BaseReportCommand.Recepient[]@,Interprise.Presentation.Report.CommonClass.BaseReportCommand.Recepient@,System.Boolean@,DevExpress.XtraReports.UI.XtraReport,System.Boolean,System.Boolean)">
	<summary>
 Method to send email
 </summary>
	<param name="reportRecepients">Returns many recepients</param>
	<param name="singleRecepient">Retruns single recepients</param>
	<param name="isAnySuccessful"></param>
	<param name="reportToShow">Shows what report to be displayed</param>
	<param name="isFax">Checks whether the fax is use or not</param>
	<param name="isLowestCostRoutine">Checks if the Lowest Cost Route is use</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.GetFaxServiceProvider(System.String@)">
	<summary>
	</summary>
	<param name="faxServiceProvider"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.OpenDesigner(System.Data.DataRow,Interprise.Presentation.Report.Documents.ReportBase)">
	<summary>
 Load report using devExpress xtraReport document
 </summary>
	<param name="selectedReport">The current selected report</param>
	<param name="reportDocument">The active report</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.OpenDesigner(System.Data.DataRow,System.IO.MemoryStream)">
	<summary>
 Load report from a stream
 </summary>
	<param name="selectedReport"></param>
	<param name="streamDocument"></param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.GetReport(Interprise.Framework.Base.Shared.Enum.ReportAction,System.String[][])">
	<summary>
 Similar to print. But instead of sending the report to the preview screen/printer/file. 
 method will return an instance of the report being printed that can be processed by the calling procedure.
 </summary>
	<param name="report">Gets the current report action of the report</param>
	<param name="params">Additional condition when printing the report</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.OnInitializeData(Interprise.Framework.Base.Shared.Enum.ReportAction,System.String@)">
	<summary>
 Gets the initial data for the reports
 </summary>
	<param name="report">Gets the current report action of the report</param>
	<param name="filter">Additional condition when printing the report</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.OnCleanUpData(Interprise.Framework.Base.Shared.Enum.ReportAction)">
	<summary>
	</summary>
	<param name="report">Gets the current report action of the report</param>
	<remarks></remarks>
</member><member name="M:Interprise.Presentation.Report.CommonClass.BaseReportCommand.CreateTagPrintedCriteria(Interprise.Presentation.Report.CommonClass.BaseReportCommand.Recepient[],Interprise.Presentation.Report.CommonClass.BaseReportCommand.Recepient,System.Boolean)">
	<summary>
	</summary>
	<param name="reportRecepients"></param>
	<param name="singleRecepient"></param>
	<param name="isPrintAllSuccessfull"></param>
	<remarks></remarks>
</member>
</members>
</doc>