<?xml version="1.0" standalone="yes"?>
<package version="2.1" displayname="Entity Sorting" debug="false" includeentityhelper="true">
  
  <!-- ###################################################################################################### -->
  <!-- Licensed by Interprise Solutions.					                          -->
  <!-- http://www.InterpriseSolutions.com														                                          -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                    -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!-- ###################################################################################################### -->
  
  <PackageTransform>
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ise="urn:ise" exclude-result-prefixes="ise">
      <xsl:output method="html" omit-xml-declaration="yes" />
      
      <xsl:template match="/">
        <b><xsl:value-of select="ise:StringResource('sort.aspx.0')" disable-output-escaping="yes" /></b>&#160;
        <select id="selSort">
          <!-- Sort By Best Match 
                1:  Best Match
                2:  Best Seller
                3:  Most Popular
                4:  Availability
                5:  Price Low to High
                6:  Price High to Low
                7:  Name A to Z
                8:  Name Z to A
                9:  New Arrival
          -->
          <option value="1">
            <xsl:value-of select="ise:StringResourceTextOnly('sort.aspx.1')" disable-output-escaping="yes" />
          </option>
          <option value="2">
            <xsl:value-of select="ise:StringResourceTextOnly('sort.aspx.2')" disable-output-escaping="yes" />
          </option>
          <option value="3">
            <xsl:value-of select="ise:StringResourceTextOnly('sort.aspx.3')" disable-output-escaping="yes" />
          </option>
          <option value="4">
            <xsl:value-of select="ise:StringResourceTextOnly('sort.aspx.4')" disable-output-escaping="yes" />
          </option>
          <option value="5">
            <xsl:value-of select="ise:StringResourceTextOnly('sort.aspx.5')" disable-output-escaping="yes" />
          </option>
          <option value="6">
            <xsl:value-of select="ise:StringResourceTextOnly('sort.aspx.6')" disable-output-escaping="yes" />
          </option>
          <option value="7">
            <xsl:value-of select="ise:StringResourceTextOnly('sort.aspx.7')" disable-output-escaping="yes" />
          </option>
          <option value="8">
            <xsl:value-of select="ise:StringResourceTextOnly('sort.aspx.8')" disable-output-escaping="yes" />
          </option>
          <option value="9">
            <xsl:value-of select="ise:StringResourceTextOnly('sort.aspx.9')" disable-output-escaping="yes" />
          </option>
        </select>

        <script type="text/javascript">

          function GetQueryStringValue(keyname) {
          //get querystring(s) without the ?
          var urlParams = decodeURI(window.location.search.substring(1)); //MySideNOTE: do not use unescape() for URI, use decodeURI()

          //if no querystring, return null
          if (urlParams == false | urlParams == '') return null;

          //get key/value pairs
          var pairs = urlParams.split("&amp;");

          var keyValue_Collection = {};
          for (var value in pairs) {
          //let's get the position of the first occurrence of "=", in case value has "=" in it
          var equalsignPosition = pairs[value].indexOf("=");

          if (equalsignPosition == -1) //in case there's only the key, e.g: http://7php.com/?niche
          keyValue_Collection[pairs[value]] = ''; //you could change the value to true as per your needs
          else
          keyValue_Collection[pairs[value].substring(0, equalsignPosition)] = pairs[value].substr(equalsignPosition + 1);
          }
          return keyValue_Collection[keyname];
          }

          function GetQueryStringSortValue() {
          var sortValue = 1; //set default sort option
          var keyValue = GetQueryStringValue("sort");

          if (keyValue != null &amp;&amp; keyValue != '') {
          sortValue = keyValue;
          }
          return sortValue;
          }

          function ChangeQuerystringValue(keyname, newvalue) {

          //queryParameters -> handles the query string parameters
          //queryString -> the query string without the fist '?' character
          //re -> the regular expression
          //m -> holds the string matching the regular expression
          var queryParameters = {}, queryString = location.search.substring(1),
          re = /([^&amp;=]+)=([^&amp;]*)/g, m;

          // Creates a map with the query string parameters
          while (m = re.exec(queryString)) {
          queryParameters[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);
          }
          queryParameters['pagenum'] = 1;
          queryParameters[keyname] = newvalue;


          location.search = $.param(queryParameters);
          }

          jQuery(document).ready(function ($) {
          //set value of sort option base from querystring key "sort" value
          $("#selSort").val(GetQueryStringSortValue());

          });

          $("#selSort").change(function () {
          ChangeQuerystringValue("sort", $("#selSort").val());
          });


        </script>
      </xsl:template>
      
    </xsl:stylesheet>
  </PackageTransform>
</package>
